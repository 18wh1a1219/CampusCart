{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;IAMaA,a;;;;;EAGXC,yBAAc;IAAA;;IAAA;IACZ;;IADYC,uEAF+C,EAE/C;;IAGZ,MAAKC,WAAL,GAAmB,0BAAnB;IAHY;EAIb;;;;WAEDC,+BAAsBC,KAAtBD,EAAsC;MACpC,KAAKE,MAAL,CAAYF,qBAAZ,GAAoCC,KAApC;MACA,OAAO,IAAP;IACD;;;WAEDE,8BAAqBF,KAArBE,EAAqC;MACnC,KAAKD,MAAL,CAAYC,oBAAZ,GAAmCF,KAAnC;MACA,OAAO,IAAP;IACD;;;EAjBgCG,oB","names":["NativeGesture","constructor","_defineProperty","handlerName","shouldActivateOnStart","value","config","disallowInterruption","BaseGesture"],"sources":["nativeGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport {\n  NativeViewGestureConfig,\n  NativeViewGestureHandlerPayload,\n} from '../NativeViewGestureHandler';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n"]}