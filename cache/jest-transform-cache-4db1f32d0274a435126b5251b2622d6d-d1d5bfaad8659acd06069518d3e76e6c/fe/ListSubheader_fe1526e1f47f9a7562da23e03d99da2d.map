{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAsC;EAAA,IAAnCC,KAAmC,QAAnCA,KAAmC;EAAA,IAA5BC,KAA4B,QAA5BA,KAA4B;EAAA,IAAlBC,IAAkB;EAC1D,IAAQC,MAAR,GAA0BF,KAA1B,CAAQE,MAAR;EAAA,IAAgBC,KAAhB,GAA0BH,KAA1B,CAAgBG,KAAhB;EACA,IAAMC,IAAI,GAAGD,KAAK,CAACE,MAAnB;EACA,IAAMC,SAAS,GAAG,oBAAMJ,MAAM,CAACK,IAAb,EAAmBC,KAAnB,CAAyB,IAAzB,EAA+BC,GAA/B,GAAqCC,MAArC,EAAlB;EAEA,OACEC,oBAACC,aAAD;IACEC,aAAa,EAAE;EADjB,GAEMZ,IAFN;IAGEF,KAAK,EAAE,CAACe,MAAM,CAACC,SAAR;MAAqBC,KAAK,EAAEV;IAA5B,GAA0CF,IAA1C,GAAkDL,KAAlD;EAHT,GADF;AALF;;AAcAD,aAAa,CAACmB,WAAdnB,GAA4B,gBAA5BA;;AAEA,IAAMgB,MAAM,GAAGI,wBAAWC,MAAXD,CAAkB;EAC/BH,SAAS,EAAE;IACTK,iBAAiB,EAAE,EADV;IAETC,eAAe,EAAE;EAFR;AADoB,CAAlBH,CAAf;;eAOe,wBAAUpB,aAAV","names":["ListSubheader","style","theme","rest","colors","fonts","font","medium","textColor","text","alpha","rgb","string","React","_Text","numberOfLines","styles","container","color","displayName","StyleSheet","create","paddingHorizontal","paddingVertical"],"sources":["ListSubheader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = ({ style, theme, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const font = fonts.medium;\n  const textColor = color(colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <Text\n      numberOfLines={1}\n      {...rest}\n      style={[styles.container, { color: textColor, ...font }, style]}\n    />\n  );\n};\n\nListSubheader.displayName = 'List.Subheader';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]}