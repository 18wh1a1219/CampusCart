f1352f7d4e284f6ecf6f2dd7bdde0223
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["children", "theme", "style"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.DialogTitle = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Title = _interopRequireDefault(require("../Typography/Title"));

var _theming = require("../../core/theming");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var DialogTitle = function DialogTitle(_ref) {
  var children = _ref.children,
      theme = _ref.theme,
      style = _ref.style,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return React.createElement(_Title.default, _extends({
    accessibilityTraits: "header",
    accessibilityRole: "header",
    style: [styles.text, {
      color: theme.colors.text
    }, style]
  }, rest), children);
};

exports.DialogTitle = DialogTitle;
DialogTitle.displayName = 'Dialog.Title';

var styles = _reactNative.StyleSheet.create({
  text: {
    marginTop: 22,
    marginBottom: 18,
    marginHorizontal: 24
  }
});

var _default = (0, _theming.withTheme)(DialogTitle);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnREEsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWM7RUFBQSxJQUFHQyxRQUFILFFBQUdBLFFBQUg7RUFBQSxJQUFhQyxLQUFiLFFBQWFBLEtBQWI7RUFBQSxJQUFvQkMsS0FBcEIsUUFBb0JBLEtBQXBCO0VBQUEsSUFBOEJDLElBQTlCO0VBQUEsT0FDbEJDLG9CQUFDQyxjQUFEO0lBRUVDLG1CQUFtQixFQUFDLFFBRnRCO0lBR0VDLGlCQUFpQixFQUFDLFFBSHBCO0lBSUVMLEtBQUssRUFBRSxDQUFDTSxNQUFNLENBQUNDLElBQVIsRUFBYztNQUFFQyxLQUFLLEVBQUVULEtBQUssQ0FBQ1UsTUFBTlYsQ0FBYVE7SUFBdEIsQ0FBZCxFQUE0Q1AsS0FBNUM7RUFKVCxHQUtNQyxJQUxOLEdBT0dILFFBUEgsQ0FEa0I7QUFBcEI7OztBQVlBRCxXQUFXLENBQUNhLFdBQVpiLEdBQTBCLGNBQTFCQTs7QUFFQSxJQUFNUyxNQUFNLEdBQUdLLHdCQUFXQyxNQUFYRCxDQUFrQjtFQUMvQkosSUFBSSxFQUFFO0lBQ0pNLFNBQVMsRUFBRSxFQURQO0lBRUpDLFlBQVksRUFBRSxFQUZWO0lBR0pDLGdCQUFnQixFQUFFO0VBSGQ7QUFEeUIsQ0FBbEJKLENBQWY7O2VBUWUsd0JBQVVkLFdBQVYiLCJuYW1lcyI6WyJEaWFsb2dUaXRsZSIsImNoaWxkcmVuIiwidGhlbWUiLCJzdHlsZSIsInJlc3QiLCJSZWFjdCIsIl9UaXRsZSIsImFjY2Vzc2liaWxpdHlUcmFpdHMiLCJhY2Nlc3NpYmlsaXR5Um9sZSIsInN0eWxlcyIsInRleHQiLCJjb2xvciIsImNvbG9ycyIsImRpc3BsYXlOYW1lIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsIm1hcmdpbkhvcml6b250YWwiXSwic291cmNlcyI6WyJEaWFsb2dUaXRsZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgU3R5bGVQcm9wLCBUZXh0U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFRpdGxlIGZyb20gJy4uL1R5cG9ncmFwaHkvVGl0bGUnO1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vY29yZS90aGVtaW5nJztcblxudHlwZSBQcm9wcyA9IFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aFJlZjx0eXBlb2YgVGl0bGU+ICYge1xuICAvKipcbiAgICogVGl0bGUgdGV4dCBmb3IgdGhlIGBEaWFsb2dUaXRsZWAuXG4gICAqL1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBzdHlsZT86IFN0eWxlUHJvcDxUZXh0U3R5bGU+O1xuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICB0aGVtZTogUmVhY3ROYXRpdmVQYXBlci5UaGVtZTtcbn07XG5cbi8qKlxuICogQSBjb21wb25lbnQgdG8gc2hvdyBhIHRpdGxlIGluIGEgRGlhbG9nLlxuICpcbiAqIDxkaXYgY2xhc3M9XCJzY3JlZW5zaG90c1wiPlxuICogICA8ZmlndXJlPlxuICogICAgIDxpbWcgY2xhc3M9XCJtZWRpdW1cIiBzcmM9XCJzY3JlZW5zaG90cy9kaWFsb2ctdGl0bGUucG5nXCIgLz5cbiAqICAgPC9maWd1cmU+XG4gKiA8L2Rpdj5cbiAqXG4gKiAjIyBVc2FnZVxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IFBhcmFncmFwaCwgRGlhbG9nLCBQb3J0YWwgfSBmcm9tICdyZWFjdC1uYXRpdmUtcGFwZXInO1xuICpcbiAqIGNvbnN0IE15Q29tcG9uZW50ID0gKCkgPT4ge1xuICogICBjb25zdCBbdmlzaWJsZSwgc2V0VmlzaWJsZV0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gKlxuICogICBjb25zdCBoaWRlRGlhbG9nID0gKCkgPT4gc2V0VmlzaWJsZShmYWxzZSk7XG4gKlxuICogICByZXR1cm4gKFxuICogICAgIDxQb3J0YWw+XG4gKiAgICAgICA8RGlhbG9nIHZpc2libGU9e3Zpc2libGV9IG9uRGlzbWlzcz17aGlkZURpYWxvZ30+XG4gKiAgICAgICAgIDxEaWFsb2cuVGl0bGU+VGhpcyBpcyBhIHRpdGxlPC9EaWFsb2cuVGl0bGU+XG4gKiAgICAgICAgIDxEaWFsb2cuQ29udGVudD5cbiAqICAgICAgICAgICA8UGFyYWdyYXBoPlRoaXMgaXMgc2ltcGxlIGRpYWxvZzwvUGFyYWdyYXBoPlxuICogICAgICAgICA8L0RpYWxvZy5Db250ZW50PlxuICogICAgICAgPC9EaWFsb2c+XG4gKiAgICAgPC9Qb3J0YWw+XG4gKiAgICk7XG4gKiB9O1xuICpcbiAqIGV4cG9ydCBkZWZhdWx0IE15Q29tcG9uZW50O1xuICogYGBgXG4gKi9cbmNvbnN0IERpYWxvZ1RpdGxlID0gKHsgY2hpbGRyZW4sIHRoZW1lLCBzdHlsZSwgLi4ucmVzdCB9OiBQcm9wcykgPT4gKFxuICA8VGl0bGVcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFdlIGtlZXAgb2xkIGExMXkgcHJvcHMgZm9yIGJhY2t3YXJkcyBjb21wYXQgd2l0aCBvbGQgUk4gdmVyc2lvbnNcbiAgICBhY2Nlc3NpYmlsaXR5VHJhaXRzPVwiaGVhZGVyXCJcbiAgICBhY2Nlc3NpYmlsaXR5Um9sZT1cImhlYWRlclwiXG4gICAgc3R5bGU9e1tzdHlsZXMudGV4dCwgeyBjb2xvcjogdGhlbWUuY29sb3JzLnRleHQgfSwgc3R5bGVdfVxuICAgIHsuLi5yZXN0fVxuICA+XG4gICAge2NoaWxkcmVufVxuICA8L1RpdGxlPlxuKTtcblxuRGlhbG9nVGl0bGUuZGlzcGxheU5hbWUgPSAnRGlhbG9nLlRpdGxlJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICB0ZXh0OiB7XG4gICAgbWFyZ2luVG9wOiAyMixcbiAgICBtYXJnaW5Cb3R0b206IDE4LFxuICAgIG1hcmdpbkhvcml6b250YWw6IDI0LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShEaWFsb2dUaXRsZSk7XG5cbi8vIEBjb21wb25lbnQtZG9jcyBpZ25vcmUtbmV4dC1saW5lXG5leHBvcnQgeyBEaWFsb2dUaXRsZSB9O1xuIl19