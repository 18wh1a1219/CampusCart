d998ac97b9cf44e8648d424782cbc67a
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));

var _extends2 = _interopRequireDefault2(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _theming = require("./theming");

var _settings = require("./settings");

var _MaterialCommunityIcon = _interopRequireDefault(require("../components/MaterialCommunityIcon"));

var _PortalHost = _interopRequireDefault(require("../components/Portal/PortalHost"));

var _DefaultTheme = _interopRequireDefault(require("../styles/DefaultTheme"));

var _DarkTheme = _interopRequireDefault(require("../styles/DarkTheme"));

var _addEventListener = require("../utils/addEventListener");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var Provider = function Provider(_ref) {
  var props = (0, _extends2.default)({}, _ref);
  var colorSchemeName = !props.theme && (_reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.getColorScheme()) || 'light';

  var _React$useState = React.useState(false),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      reduceMotionEnabled = _React$useState2[0],
      setReduceMotionEnabled = _React$useState2[1];

  var _React$useState3 = React.useState(colorSchemeName),
      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
      colorScheme = _React$useState4[0],
      setColorScheme = _React$useState4[1];

  var handleAppearanceChange = function handleAppearanceChange(preferences) {
    var colorScheme = preferences.colorScheme;
    setColorScheme(colorScheme);
  };

  React.useEffect(function () {
    var subscription;

    if (!props.theme) {
      subscription = (0, _addEventListener.addEventListener)(_reactNative.AccessibilityInfo, 'reduceMotionChanged', setReduceMotionEnabled);
    }

    return function () {
      if (!props.theme) {
        var _subscription;

        (_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.remove();
      }
    };
  }, [props.theme]);
  React.useEffect(function () {
    var appearanceSubscription;

    if (!props.theme) {
      appearanceSubscription = _reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.addChangeListener(handleAppearanceChange);
    }

    return function () {
      if (!props.theme) {
        if (appearanceSubscription) {
          appearanceSubscription.remove();
        } else {
          _reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.removeChangeListener(handleAppearanceChange);
        }
      }
    };
  }, [props.theme]);

  var getTheme = function getTheme() {
    var providedTheme = props.theme;

    if (providedTheme) {
      return providedTheme;
    } else {
      var theme = colorScheme === 'dark' ? _DarkTheme.default : _DefaultTheme.default;
      return (0, _extends2.default)({}, theme, {
        animation: (0, _extends2.default)({}, theme.animation, {
          scale: reduceMotionEnabled ? 0 : 1
        })
      });
    }
  };

  var children = props.children,
      settings = props.settings;
  return React.createElement(_PortalHost.default, null, React.createElement(_settings.Provider, {
    value: settings || {
      icon: _MaterialCommunityIcon.default
    }
  }, React.createElement(_theming.ThemeProvider, {
    theme: getTheme()
  }, children)));
};

var _default = Provider;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUk7TUFBRUksSUFBSSxFQUFFQztJQUFSO0VBQXJDLEdBQ0UzQixvQkFBQzRCLHNCQUFEO0lBQWUvQixLQUFLLEVBQUVrQixRQUFRO0VBQTlCLEdBQW1DTSxRQUFuQyxDQURGLENBREYsQ0FERjtBQXhFRjs7ZUFpRmUzQiIsIm5hbWVzIjpbIlByb3ZpZGVyIiwicHJvcHMiLCJjb2xvclNjaGVtZU5hbWUiLCJ0aGVtZSIsIkFwcGVhcmFuY2UiLCJnZXRDb2xvclNjaGVtZSIsIlJlYWN0IiwidXNlU3RhdGUiLCJyZWR1Y2VNb3Rpb25FbmFibGVkIiwic2V0UmVkdWNlTW90aW9uRW5hYmxlZCIsImNvbG9yU2NoZW1lIiwic2V0Q29sb3JTY2hlbWUiLCJoYW5kbGVBcHBlYXJhbmNlQ2hhbmdlIiwicHJlZmVyZW5jZXMiLCJ1c2VFZmZlY3QiLCJzdWJzY3JpcHRpb24iLCJBY2Nlc3NpYmlsaXR5SW5mbyIsInJlbW92ZSIsImFwcGVhcmFuY2VTdWJzY3JpcHRpb24iLCJhZGRDaGFuZ2VMaXN0ZW5lciIsInJlbW92ZUNoYW5nZUxpc3RlbmVyIiwiZ2V0VGhlbWUiLCJwcm92aWRlZFRoZW1lIiwiRGFya1RoZW1lIiwiRGVmYXVsdFRoZW1lIiwiYW5pbWF0aW9uIiwic2NhbGUiLCJjaGlsZHJlbiIsInNldHRpbmdzIiwiX1BvcnRhbEhvc3QiLCJfc2V0dGluZ3MiLCJ2YWx1ZSIsImljb24iLCJNYXRlcmlhbENvbW11bml0eUljb24iLCJfdGhlbWluZyJdLCJzb3VyY2VzIjpbIlByb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBBY2Nlc3NpYmlsaXR5SW5mbyxcbiAgQXBwZWFyYW5jZSxcbiAgQ29sb3JTY2hlbWVOYW1lLFxuICBOYXRpdmVFdmVudFN1YnNjcmlwdGlvbixcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICcuL3RoZW1pbmcnO1xuaW1wb3J0IHsgUHJvdmlkZXIgYXMgU2V0dGluZ3NQcm92aWRlciwgU2V0dGluZ3MgfSBmcm9tICcuL3NldHRpbmdzJztcbmltcG9ydCBNYXRlcmlhbENvbW11bml0eUljb24gZnJvbSAnLi4vY29tcG9uZW50cy9NYXRlcmlhbENvbW11bml0eUljb24nO1xuaW1wb3J0IFBvcnRhbEhvc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3J0YWwvUG9ydGFsSG9zdCc7XG5pbXBvcnQgRGVmYXVsdFRoZW1lIGZyb20gJy4uL3N0eWxlcy9EZWZhdWx0VGhlbWUnO1xuaW1wb3J0IERhcmtUaGVtZSBmcm9tICcuLi9zdHlsZXMvRGFya1RoZW1lJztcbmltcG9ydCB7IGFkZEV2ZW50TGlzdGVuZXIgfSBmcm9tICcuLi91dGlscy9hZGRFdmVudExpc3RlbmVyJztcblxudHlwZSBQcm9wcyA9IHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgdGhlbWU/OiBSZWFjdE5hdGl2ZVBhcGVyLlRoZW1lO1xuICBzZXR0aW5ncz86IFNldHRpbmdzO1xufTtcblxuY29uc3QgUHJvdmlkZXIgPSAoeyAuLi5wcm9wcyB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBjb2xvclNjaGVtZU5hbWUgPVxuICAgICghcHJvcHMudGhlbWUgJiYgQXBwZWFyYW5jZT8uZ2V0Q29sb3JTY2hlbWUoKSkgfHwgJ2xpZ2h0JztcblxuICBjb25zdCBbcmVkdWNlTW90aW9uRW5hYmxlZCwgc2V0UmVkdWNlTW90aW9uRW5hYmxlZF0gPVxuICAgIFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgY29uc3QgW2NvbG9yU2NoZW1lLCBzZXRDb2xvclNjaGVtZV0gPVxuICAgIFJlYWN0LnVzZVN0YXRlPENvbG9yU2NoZW1lTmFtZT4oY29sb3JTY2hlbWVOYW1lKTtcblxuICBjb25zdCBoYW5kbGVBcHBlYXJhbmNlQ2hhbmdlID0gKFxuICAgIHByZWZlcmVuY2VzOiBBcHBlYXJhbmNlLkFwcGVhcmFuY2VQcmVmZXJlbmNlc1xuICApID0+IHtcbiAgICBjb25zdCB7IGNvbG9yU2NoZW1lIH0gPSBwcmVmZXJlbmNlcztcbiAgICBzZXRDb2xvclNjaGVtZShjb2xvclNjaGVtZSk7XG4gIH07XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgc3Vic2NyaXB0aW9uOiBOYXRpdmVFdmVudFN1YnNjcmlwdGlvbiB8IHVuZGVmaW5lZDtcblxuICAgIGlmICghcHJvcHMudGhlbWUpIHtcbiAgICAgIHN1YnNjcmlwdGlvbiA9IGFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgIEFjY2Vzc2liaWxpdHlJbmZvLFxuICAgICAgICAncmVkdWNlTW90aW9uQ2hhbmdlZCcsXG4gICAgICAgIHNldFJlZHVjZU1vdGlvbkVuYWJsZWRcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoIXByb3BzLnRoZW1lKSB7XG4gICAgICAgIHN1YnNjcmlwdGlvbj8ucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSwgW3Byb3BzLnRoZW1lXSk7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgYXBwZWFyYW5jZVN1YnNjcmlwdGlvbjogTmF0aXZlRXZlbnRTdWJzY3JpcHRpb24gfCB1bmRlZmluZWQ7XG4gICAgaWYgKCFwcm9wcy50aGVtZSkge1xuICAgICAgYXBwZWFyYW5jZVN1YnNjcmlwdGlvbiA9IEFwcGVhcmFuY2U/LmFkZENoYW5nZUxpc3RlbmVyKFxuICAgICAgICBoYW5kbGVBcHBlYXJhbmNlQ2hhbmdlXG4gICAgICApIGFzIE5hdGl2ZUV2ZW50U3Vic2NyaXB0aW9uIHwgdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaWYgKCFwcm9wcy50aGVtZSkge1xuICAgICAgICBpZiAoYXBwZWFyYW5jZVN1YnNjcmlwdGlvbikge1xuICAgICAgICAgIGFwcGVhcmFuY2VTdWJzY3JpcHRpb24ucmVtb3ZlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQXBwZWFyYW5jZT8ucmVtb3ZlQ2hhbmdlTGlzdGVuZXIoaGFuZGxlQXBwZWFyYW5jZUNoYW5nZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9LCBbcHJvcHMudGhlbWVdKTtcblxuICBjb25zdCBnZXRUaGVtZSA9ICgpID0+IHtcbiAgICBjb25zdCB7IHRoZW1lOiBwcm92aWRlZFRoZW1lIH0gPSBwcm9wcztcblxuICAgIGlmIChwcm92aWRlZFRoZW1lKSB7XG4gICAgICByZXR1cm4gcHJvdmlkZWRUaGVtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdGhlbWUgPSAoXG4gICAgICAgIGNvbG9yU2NoZW1lID09PSAnZGFyaycgPyBEYXJrVGhlbWUgOiBEZWZhdWx0VGhlbWVcbiAgICAgICkgYXMgUmVhY3ROYXRpdmVQYXBlci5UaGVtZTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4udGhlbWUsXG4gICAgICAgIGFuaW1hdGlvbjoge1xuICAgICAgICAgIC4uLnRoZW1lLmFuaW1hdGlvbixcbiAgICAgICAgICBzY2FsZTogcmVkdWNlTW90aW9uRW5hYmxlZCA/IDAgOiAxLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgeyBjaGlsZHJlbiwgc2V0dGluZ3MgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxQb3J0YWxIb3N0PlxuICAgICAgPFNldHRpbmdzUHJvdmlkZXIgdmFsdWU9e3NldHRpbmdzIHx8IHsgaWNvbjogTWF0ZXJpYWxDb21tdW5pdHlJY29uIH19PlxuICAgICAgICA8VGhlbWVQcm92aWRlciB0aGVtZT17Z2V0VGhlbWUoKX0+e2NoaWxkcmVufTwvVGhlbWVQcm92aWRlcj5cbiAgICAgIDwvU2V0dGluZ3NQcm92aWRlcj5cbiAgICA8L1BvcnRhbEhvc3Q+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQcm92aWRlcjtcbiJdfQ==