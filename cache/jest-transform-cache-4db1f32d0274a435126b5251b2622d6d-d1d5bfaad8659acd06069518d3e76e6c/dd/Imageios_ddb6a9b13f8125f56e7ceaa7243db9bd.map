{"version":3,"names":["getSize","uri","success","failure","NativeImageLoaderIOS","then","width","height","catch","console","warn","getSizeWithHeaders","headers","sizes","prefetchWithMetadata","url","queryRootName","rootTag","prefetchImageWithMetadata","prefetchImage","prefetch","queryCache","urls","Image","props","forwardedRef","source","undefined","sources","style","Array","isArray","styles","base","resizeMode","tintColor","src","children","Error","analyticTag","React","forwardRef","ImageInjection","unstable_createImageComponent","displayName","resolveAssetSource","propTypes","require","ImagePropTypes","StyleSheet","create","overflow","module","exports"],"sources":["Image.ios.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet/StyleSheet';\n\nimport ImageInjection from './ImageInjection';\nimport ImageAnalyticsTagContext from './ImageAnalyticsTagContext';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport resolveAssetSource from './resolveAssetSource';\n\nimport type {ImageProps as ImagePropsType} from './ImageProps';\n\nimport type {ImageStyleProp} from '../StyleSheet/StyleSheet';\nimport NativeImageLoaderIOS from './NativeImageLoaderIOS';\n\nimport ImageViewNativeComponent from './ImageViewNativeComponent';\nimport type {RootTag} from 'react-native/Libraries/Types/RootTagTypes';\n\nfunction getSize(\n  uri: string,\n  success: (width: number, height: number) => void,\n  failure?: (error: any) => void,\n) {\n  NativeImageLoaderIOS.getSize(uri)\n    .then(([width, height]) => success(width, height))\n    .catch(\n      failure ||\n        function () {\n          console.warn('Failed to get size for image ' + uri);\n        },\n    );\n}\n\nfunction getSizeWithHeaders(\n  uri: string,\n  headers: {[string]: string, ...},\n  success: (width: number, height: number) => void,\n  failure?: (error: any) => void,\n): any {\n  return NativeImageLoaderIOS.getSizeWithHeaders(uri, headers)\n    .then(function (sizes) {\n      success(sizes.width, sizes.height);\n    })\n    .catch(\n      failure ||\n        function () {\n          console.warn('Failed to get size for image: ' + uri);\n        },\n    );\n}\n\nfunction prefetchWithMetadata(\n  url: string,\n  queryRootName: string,\n  rootTag?: ?RootTag,\n): any {\n  if (NativeImageLoaderIOS.prefetchImageWithMetadata) {\n    // number params like rootTag cannot be nullable before TurboModules is available\n    return NativeImageLoaderIOS.prefetchImageWithMetadata(\n      url,\n      queryRootName,\n      // NOTE: RootTag type\n      // $FlowFixMe[incompatible-call] RootTag: number is incompatible with RootTag\n      rootTag ? rootTag : 0,\n    );\n  } else {\n    return NativeImageLoaderIOS.prefetchImage(url);\n  }\n}\n\nfunction prefetch(url: string): any {\n  return NativeImageLoaderIOS.prefetchImage(url);\n}\n\nasync function queryCache(\n  urls: Array<string>,\n): Promise<{[string]: 'memory' | 'disk' | 'disk/memory', ...}> {\n  return await NativeImageLoaderIOS.queryCache(urls);\n}\n\nexport type ImageComponentStatics = $ReadOnly<{|\n  getSize: typeof getSize,\n  getSizeWithHeaders: typeof getSizeWithHeaders,\n  prefetch: typeof prefetch,\n  prefetchWithMetadata: typeof prefetchWithMetadata,\n  queryCache: typeof queryCache,\n  resolveAssetSource: typeof resolveAssetSource,\n|}>;\n\n/**\n * A React component for displaying different types of images,\n * including network images, static resources, temporary local images, and\n * images from local disk, such as the camera roll.\n *\n * See https://reactnative.dev/docs/image\n */\nlet Image = (props: ImagePropsType, forwardedRef) => {\n  const source = resolveAssetSource(props.source) || {\n    uri: undefined,\n    width: undefined,\n    height: undefined,\n  };\n\n  let sources;\n  let style: ImageStyleProp;\n  if (Array.isArray(source)) {\n    style = flattenStyle([styles.base, props.style]) || {};\n    sources = source;\n  } else {\n    const {width, height, uri} = source;\n    style = flattenStyle([{width, height}, styles.base, props.style]) || {};\n    sources = [source];\n\n    if (uri === '') {\n      console.warn('source.uri should not be an empty string');\n    }\n  }\n\n  const resizeMode = props.resizeMode || style.resizeMode || 'cover';\n  const tintColor = style.tintColor;\n\n  if (props.src != null) {\n    console.warn(\n      'The <Image> component requires a `source` property rather than `src`.',\n    );\n  }\n\n  if (props.children != null) {\n    throw new Error(\n      'The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.',\n    );\n  }\n\n  return (\n    <ImageAnalyticsTagContext.Consumer>\n      {analyticTag => {\n        return (\n          <ImageViewNativeComponent\n            {...props}\n            ref={forwardedRef}\n            style={style}\n            resizeMode={resizeMode}\n            tintColor={tintColor}\n            source={sources}\n            internal_analyticTag={analyticTag}\n          />\n        );\n      }}\n    </ImageAnalyticsTagContext.Consumer>\n  );\n};\n\nImage = React.forwardRef<\n  ImagePropsType,\n  React.ElementRef<typeof ImageViewNativeComponent>,\n>(Image);\n\nif (ImageInjection.unstable_createImageComponent != null) {\n  Image = ImageInjection.unstable_createImageComponent(Image);\n}\n\nImage.displayName = 'Image';\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it.\n *\n * See https://reactnative.dev/docs/image#getsize\n */\n/* $FlowFixMe[prop-missing] (>=0.89.0 site=react_native_ios_fb) This comment\n * suppresses an error found when Flow v0.89 was deployed. To see the error,\n * delete this comment and run Flow. */\nImage.getSize = getSize;\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n * with the ability to provide the headers for the request.\n *\n * See https://reactnative.dev/docs/image#getsizewithheaders\n */\n/* $FlowFixMe[prop-missing] (>=0.89.0 site=react_native_ios_fb) This comment\n * suppresses an error found when Flow v0.89 was deployed. To see the error,\n * delete this comment and run Flow. */\nImage.getSizeWithHeaders = getSizeWithHeaders;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache.\n *\n * See https://reactnative.dev/docs/image#prefetch\n */\n/* $FlowFixMe[prop-missing] (>=0.89.0 site=react_native_ios_fb) This comment\n * suppresses an error found when Flow v0.89 was deployed. To see the error,\n * delete this comment and run Flow. */\nImage.prefetch = prefetch;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache, and adds metadata for queryRootName and rootTag.\n *\n * See https://reactnative.dev/docs/image#prefetch\n */\n/* $FlowFixMe[prop-missing] (>=0.89.0 site=react_native_ios_fb) This comment\n * suppresses an error found when Flow v0.89 was deployed. To see the error,\n * delete this comment and run Flow. */\nImage.prefetchWithMetadata = prefetchWithMetadata;\n\n/**\n * Performs cache interrogation.\n *\n *  See https://reactnative.dev/docs/image#querycache\n */\n/* $FlowFixMe[prop-missing] (>=0.89.0 site=react_native_ios_fb) This comment\n * suppresses an error found when Flow v0.89 was deployed. To see the error,\n * delete this comment and run Flow. */\nImage.queryCache = queryCache;\n\n/**\n * Resolves an asset reference into an object.\n *\n * See https://reactnative.dev/docs/image#resolveassetsource\n */\n/* $FlowFixMe[prop-missing] (>=0.89.0 site=react_native_ios_fb) This comment\n * suppresses an error found when Flow v0.89 was deployed. To see the error,\n * delete this comment and run Flow. */\nImage.resolveAssetSource = resolveAssetSource;\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nImage.propTypes = require('deprecated-react-native-prop-types').ImagePropTypes;\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nmodule.exports = ((Image: any): React.AbstractComponent<\n  ImagePropsType,\n  React.ElementRef<typeof ImageViewNativeComponent>,\n> &\n  ImageComponentStatics);\n"],"mappings":"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"}