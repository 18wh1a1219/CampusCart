c5a4e34bb0ec49d0fee7dc0e23b60c19
"use strict";

exports.__esModule = true;
exports.default = void 0;

var _ExecutionEnvironment = _interopRequireDefault(require("fbjs/lib/ExecutionEnvironment"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var doLeftAndRightSwapInRTL = true;
var isPreferredLanguageRTL = false;
var isRTLAllowed = true;
var isRTLForced = false;

var isRTL = function isRTL() {
  if (isRTLForced) {
    return true;
  }

  return isRTLAllowed && isPreferredLanguageRTL;
};

var onDirectionChange = function onDirectionChange() {
  if (_ExecutionEnvironment.default.canUseDOM) {
    if (document.documentElement && document.documentElement.setAttribute) {
      document.documentElement.setAttribute('dir', isRTL() ? 'rtl' : 'ltr');
    }
  }
};

var I18nManager = {
  allowRTL: function allowRTL(bool) {
    isRTLAllowed = bool;
    onDirectionChange();
  },
  forceRTL: function forceRTL(bool) {
    isRTLForced = bool;
    onDirectionChange();
  },
  getConstants: function getConstants() {
    return {
      doLeftAndRightSwapInRTL: doLeftAndRightSwapInRTL,
      isRTL: isRTL()
    };
  },
  setPreferredLanguageRTL: function setPreferredLanguageRTL(bool) {
    isPreferredLanguageRTL = bool;
    onDirectionChange();
  },
  swapLeftAndRightInRTL: function swapLeftAndRightInRTL(bool) {
    doLeftAndRightSwapInRTL = bool;
  }
};
var _default = I18nManager;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfRXhlY3V0aW9uRW52aXJvbm1lbnQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsImRvTGVmdEFuZFJpZ2h0U3dhcEluUlRMIiwiaXNQcmVmZXJyZWRMYW5ndWFnZVJUTCIsImlzUlRMQWxsb3dlZCIsImlzUlRMRm9yY2VkIiwiaXNSVEwiLCJvbkRpcmVjdGlvbkNoYW5nZSIsImNhblVzZURPTSIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiSTE4bk1hbmFnZXIiLCJhbGxvd1JUTCIsImJvb2wiLCJmb3JjZVJUTCIsImdldENvbnN0YW50cyIsInNldFByZWZlcnJlZExhbmd1YWdlUlRMIiwic3dhcExlZnRBbmRSaWdodEluUlRMIiwiX2RlZmF1bHQiLCJtb2R1bGUiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9FeGVjdXRpb25FbnZpcm9ubWVudCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50XCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE5pY29sYXMgR2FsbGFnaGVyLlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cbnZhciBkb0xlZnRBbmRSaWdodFN3YXBJblJUTCA9IHRydWU7XG52YXIgaXNQcmVmZXJyZWRMYW5ndWFnZVJUTCA9IGZhbHNlO1xudmFyIGlzUlRMQWxsb3dlZCA9IHRydWU7XG52YXIgaXNSVExGb3JjZWQgPSBmYWxzZTtcblxudmFyIGlzUlRMID0gZnVuY3Rpb24gaXNSVEwoKSB7XG4gIGlmIChpc1JUTEZvcmNlZCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGlzUlRMQWxsb3dlZCAmJiBpc1ByZWZlcnJlZExhbmd1YWdlUlRMO1xufTtcblxudmFyIG9uRGlyZWN0aW9uQ2hhbmdlID0gZnVuY3Rpb24gb25EaXJlY3Rpb25DaGFuZ2UoKSB7XG4gIGlmIChfRXhlY3V0aW9uRW52aXJvbm1lbnQuZGVmYXVsdC5jYW5Vc2VET00pIHtcbiAgICBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUpIHtcbiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RpcicsIGlzUlRMKCkgPyAncnRsJyA6ICdsdHInKTtcbiAgICB9XG4gIH1cbn07XG5cbnZhciBJMThuTWFuYWdlciA9IHtcbiAgYWxsb3dSVEw6IGZ1bmN0aW9uIGFsbG93UlRMKGJvb2wpIHtcbiAgICBpc1JUTEFsbG93ZWQgPSBib29sO1xuICAgIG9uRGlyZWN0aW9uQ2hhbmdlKCk7XG4gIH0sXG4gIGZvcmNlUlRMOiBmdW5jdGlvbiBmb3JjZVJUTChib29sKSB7XG4gICAgaXNSVExGb3JjZWQgPSBib29sO1xuICAgIG9uRGlyZWN0aW9uQ2hhbmdlKCk7XG4gIH0sXG4gIGdldENvbnN0YW50czogZnVuY3Rpb24gZ2V0Q29uc3RhbnRzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBkb0xlZnRBbmRSaWdodFN3YXBJblJUTDogZG9MZWZ0QW5kUmlnaHRTd2FwSW5SVEwsXG4gICAgICBpc1JUTDogaXNSVEwoKVxuICAgIH07XG4gIH0sXG4gIHNldFByZWZlcnJlZExhbmd1YWdlUlRMOiBmdW5jdGlvbiBzZXRQcmVmZXJyZWRMYW5ndWFnZVJUTChib29sKSB7XG4gICAgaXNQcmVmZXJyZWRMYW5ndWFnZVJUTCA9IGJvb2w7XG4gICAgb25EaXJlY3Rpb25DaGFuZ2UoKTtcbiAgfSxcbiAgc3dhcExlZnRBbmRSaWdodEluUlRMOiBmdW5jdGlvbiBzd2FwTGVmdEFuZFJpZ2h0SW5SVEwoYm9vbCkge1xuICAgIGRvTGVmdEFuZFJpZ2h0U3dhcEluUlRMID0gYm9vbDtcbiAgfVxufTtcbnZhciBfZGVmYXVsdCA9IEkxOG5NYW5hZ2VyO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDRSxPQUFSLEdBQWtCLEtBQUssQ0FBdkI7O0FBRUEsSUFBSUMscUJBQXFCLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsK0JBQUQsQ0FBUixDQUFsRDs7QUFFQSxTQUFTRCxzQkFBVCxDQUFnQ0UsR0FBaEMsRUFBcUM7RUFBRSxPQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0wsVUFBWCxHQUF3QkssR0FBeEIsR0FBOEI7SUFBRUosT0FBTyxFQUFFSTtFQUFYLENBQXJDO0FBQXdEOztBQVcvRixJQUFJQyx1QkFBdUIsR0FBRyxJQUE5QjtBQUNBLElBQUlDLHNCQUFzQixHQUFHLEtBQTdCO0FBQ0EsSUFBSUMsWUFBWSxHQUFHLElBQW5CO0FBQ0EsSUFBSUMsV0FBVyxHQUFHLEtBQWxCOztBQUVBLElBQUlDLEtBQUssR0FBRyxTQUFTQSxLQUFULEdBQWlCO0VBQzNCLElBQUlELFdBQUosRUFBaUI7SUFDZixPQUFPLElBQVA7RUFDRDs7RUFFRCxPQUFPRCxZQUFZLElBQUlELHNCQUF2QjtBQUNELENBTkQ7O0FBUUEsSUFBSUksaUJBQWlCLEdBQUcsU0FBU0EsaUJBQVQsR0FBNkI7RUFDbkQsSUFBSVQscUJBQXFCLENBQUNELE9BQXRCLENBQThCVyxTQUFsQyxFQUE2QztJQUMzQyxJQUFJQyxRQUFRLENBQUNDLGVBQVQsSUFBNEJELFFBQVEsQ0FBQ0MsZUFBVCxDQUF5QkMsWUFBekQsRUFBdUU7TUFDckVGLFFBQVEsQ0FBQ0MsZUFBVCxDQUF5QkMsWUFBekIsQ0FBc0MsS0FBdEMsRUFBNkNMLEtBQUssS0FBSyxLQUFMLEdBQWEsS0FBL0Q7SUFDRDtFQUNGO0FBQ0YsQ0FORDs7QUFRQSxJQUFJTSxXQUFXLEdBQUc7RUFDaEJDLFFBQVEsRUFBRSxTQUFTQSxRQUFULENBQWtCQyxJQUFsQixFQUF3QjtJQUNoQ1YsWUFBWSxHQUFHVSxJQUFmO0lBQ0FQLGlCQUFpQjtFQUNsQixDQUplO0VBS2hCUSxRQUFRLEVBQUUsU0FBU0EsUUFBVCxDQUFrQkQsSUFBbEIsRUFBd0I7SUFDaENULFdBQVcsR0FBR1MsSUFBZDtJQUNBUCxpQkFBaUI7RUFDbEIsQ0FSZTtFQVNoQlMsWUFBWSxFQUFFLFNBQVNBLFlBQVQsR0FBd0I7SUFDcEMsT0FBTztNQUNMZCx1QkFBdUIsRUFBRUEsdUJBRHBCO01BRUxJLEtBQUssRUFBRUEsS0FBSztJQUZQLENBQVA7RUFJRCxDQWRlO0VBZWhCVyx1QkFBdUIsRUFBRSxTQUFTQSx1QkFBVCxDQUFpQ0gsSUFBakMsRUFBdUM7SUFDOURYLHNCQUFzQixHQUFHVyxJQUF6QjtJQUNBUCxpQkFBaUI7RUFDbEIsQ0FsQmU7RUFtQmhCVyxxQkFBcUIsRUFBRSxTQUFTQSxxQkFBVCxDQUErQkosSUFBL0IsRUFBcUM7SUFDMURaLHVCQUF1QixHQUFHWSxJQUExQjtFQUNEO0FBckJlLENBQWxCO0FBdUJBLElBQUlLLFFBQVEsR0FBR1AsV0FBZjtBQUNBakIsT0FBTyxDQUFDRSxPQUFSLEdBQWtCc0IsUUFBbEI7QUFDQUMsTUFBTSxDQUFDekIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDRSxPQUF6QiJ9