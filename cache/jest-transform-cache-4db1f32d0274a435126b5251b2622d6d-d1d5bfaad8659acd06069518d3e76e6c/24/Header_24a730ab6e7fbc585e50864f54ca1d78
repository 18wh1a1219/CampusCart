8662b50b97eba822c57461532ee12a83
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _Colors = _interopRequireDefault(require("./Colors"));

var _HermesBadge = _interopRequireDefault(require("./HermesBadge"));

var Header = function Header() {
  var isDarkMode = (0, _reactNative.useColorScheme)() === 'dark';
  return _react.default.createElement(_reactNative.ImageBackground, {
    accessibilityRole: "image",
    testID: "new-app-screen-header",
    source: require('./logo.png'),
    style: [styles.background, {
      backgroundColor: isDarkMode ? _Colors.default.darker : _Colors.default.lighter
    }],
    imageStyle: styles.logo
  }, _react.default.createElement(_HermesBadge.default, null), _react.default.createElement(_reactNative.Text, {
    style: [styles.text, {
      color: isDarkMode ? _Colors.default.white : _Colors.default.black
    }]
  }, "Welcome to", '\n', "React Native"));
};

var styles = _reactNative.StyleSheet.create({
  background: {
    paddingBottom: 40,
    paddingTop: 96,
    paddingHorizontal: 32
  },
  logo: {
    opacity: 0.2,
    overflow: 'visible',
    resizeMode: 'cover',
    marginLeft: -128,
    marginBottom: -192
  },
  text: {
    fontSize: 40,
    fontWeight: '700',
    textAlign: 'center'
  }
});

var _default = Header;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJIZWFkZXIiLCJpc0RhcmtNb2RlIiwicmVxdWlyZSIsInN0eWxlcyIsImJhY2tncm91bmQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJDb2xvcnMiLCJkYXJrZXIiLCJsaWdodGVyIiwibG9nbyIsInRleHQiLCJjb2xvciIsIndoaXRlIiwiYmxhY2siLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwicGFkZGluZ0JvdHRvbSIsInBhZGRpbmdUb3AiLCJwYWRkaW5nSG9yaXpvbnRhbCIsIm9wYWNpdHkiLCJvdmVyZmxvdyIsInJlc2l6ZU1vZGUiLCJtYXJnaW5MZWZ0IiwibWFyZ2luQm90dG9tIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwidGV4dEFsaWduIl0sInNvdXJjZXMiOlsiSGVhZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7Tm9kZX0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtJbWFnZUJhY2tncm91bmQsIFN0eWxlU2hlZXQsIFRleHQsIHVzZUNvbG9yU2NoZW1lfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDb2xvcnMgZnJvbSAnLi9Db2xvcnMnO1xuaW1wb3J0IEhlcm1lc0JhZGdlIGZyb20gJy4vSGVybWVzQmFkZ2UnO1xuXG5jb25zdCBIZWFkZXIgPSAoKTogTm9kZSA9PiB7XG4gIGNvbnN0IGlzRGFya01vZGUgPSB1c2VDb2xvclNjaGVtZSgpID09PSAnZGFyayc7XG4gIHJldHVybiAoXG4gICAgPEltYWdlQmFja2dyb3VuZFxuICAgICAgYWNjZXNzaWJpbGl0eVJvbGU9XCJpbWFnZVwiXG4gICAgICB0ZXN0SUQ9XCJuZXctYXBwLXNjcmVlbi1oZWFkZXJcIlxuICAgICAgc291cmNlPXtyZXF1aXJlKCcuL2xvZ28ucG5nJyl9XG4gICAgICBzdHlsZT17W1xuICAgICAgICBzdHlsZXMuYmFja2dyb3VuZCxcbiAgICAgICAge1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogaXNEYXJrTW9kZSA/IENvbG9ycy5kYXJrZXIgOiBDb2xvcnMubGlnaHRlcixcbiAgICAgICAgfSxcbiAgICAgIF19XG4gICAgICBpbWFnZVN0eWxlPXtzdHlsZXMubG9nb30+XG4gICAgICA8SGVybWVzQmFkZ2UgLz5cbiAgICAgIDxUZXh0XG4gICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgc3R5bGVzLnRleHQsXG4gICAgICAgICAge1xuICAgICAgICAgICAgY29sb3I6IGlzRGFya01vZGUgPyBDb2xvcnMud2hpdGUgOiBDb2xvcnMuYmxhY2ssXG4gICAgICAgICAgfSxcbiAgICAgICAgXX0+XG4gICAgICAgIFdlbGNvbWUgdG9cbiAgICAgICAgeydcXG4nfVxuICAgICAgICBSZWFjdCBOYXRpdmVcbiAgICAgIDwvVGV4dD5cbiAgICA8L0ltYWdlQmFja2dyb3VuZD5cbiAgKTtcbn07XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgYmFja2dyb3VuZDoge1xuICAgIHBhZGRpbmdCb3R0b206IDQwLFxuICAgIHBhZGRpbmdUb3A6IDk2LFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAzMixcbiAgfSxcbiAgbG9nbzoge1xuICAgIG9wYWNpdHk6IDAuMixcbiAgICBvdmVyZmxvdzogJ3Zpc2libGUnLFxuICAgIHJlc2l6ZU1vZGU6ICdjb3ZlcicsXG4gICAgLypcbiAgICAgKiBUaGVzZSBuZWdhdGl2ZSBtYXJnaW5zIGFsbG93IHRoZSBpbWFnZSB0byBiZSBvZmZzZXQgc2ltaWxhcmx5IGFjcm9zcyBzY3JlZW4gc2l6ZXMgYW5kIGNvbXBvbmVudCBzaXplcy5cbiAgICAgKlxuICAgICAqIFRoZSBzb3VyY2UgbG9nby5wbmcgaW1hZ2UgaXMgNTEyeDUxMnB4LCBzbyBhcyBzdWNoLCB0aGVzZSBtYXJnaW5zIGF0dGVtcHQgdG8gYmUgcmVsYXRpdmUgdG8gdGhlXG4gICAgICogc291cmNlIGltYWdlJ3Mgc2l6ZS5cbiAgICAgKi9cbiAgICBtYXJnaW5MZWZ0OiAtMTI4LFxuICAgIG1hcmdpbkJvdHRvbTogLTE5MixcbiAgfSxcbiAgdGV4dDoge1xuICAgIGZvbnRTaXplOiA0MCxcbiAgICBmb250V2VpZ2h0OiAnNzAwJyxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVdBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLE1BQU0sR0FBRyxTQUFUQSxNQUFTLEdBQVk7RUFDekIsSUFBTUMsVUFBVSxHQUFHLHVDQUFxQixNQUF4QztFQUNBLE9BQ0UsNkJBQUMsNEJBQUQ7SUFDRSxpQkFBaUIsRUFBQyxPQURwQjtJQUVFLE1BQU0sRUFBQyx1QkFGVDtJQUdFLE1BQU0sRUFBRUMsT0FBTyxDQUFDLFlBQUQsQ0FIakI7SUFJRSxLQUFLLEVBQUUsQ0FDTEMsTUFBTSxDQUFDQyxVQURGLEVBRUw7TUFDRUMsZUFBZSxFQUFFSixVQUFVLEdBQUdLLGdCQUFPQyxNQUFWLEdBQW1CRCxnQkFBT0U7SUFEdkQsQ0FGSyxDQUpUO0lBVUUsVUFBVSxFQUFFTCxNQUFNLENBQUNNO0VBVnJCLEdBV0UsNkJBQUMsb0JBQUQsT0FYRixFQVlFLDZCQUFDLGlCQUFEO0lBQ0UsS0FBSyxFQUFFLENBQ0xOLE1BQU0sQ0FBQ08sSUFERixFQUVMO01BQ0VDLEtBQUssRUFBRVYsVUFBVSxHQUFHSyxnQkFBT00sS0FBVixHQUFrQk4sZ0JBQU9PO0lBRDVDLENBRks7RUFEVCxpQkFRRyxJQVJILGlCQVpGLENBREY7QUEwQkQsQ0E1QkQ7O0FBOEJBLElBQU1WLE1BQU0sR0FBR1csd0JBQVdDLE1BQVgsQ0FBa0I7RUFDL0JYLFVBQVUsRUFBRTtJQUNWWSxhQUFhLEVBQUUsRUFETDtJQUVWQyxVQUFVLEVBQUUsRUFGRjtJQUdWQyxpQkFBaUIsRUFBRTtFQUhULENBRG1CO0VBTS9CVCxJQUFJLEVBQUU7SUFDSlUsT0FBTyxFQUFFLEdBREw7SUFFSkMsUUFBUSxFQUFFLFNBRk47SUFHSkMsVUFBVSxFQUFFLE9BSFI7SUFVSkMsVUFBVSxFQUFFLENBQUMsR0FWVDtJQVdKQyxZQUFZLEVBQUUsQ0FBQztFQVhYLENBTnlCO0VBbUIvQmIsSUFBSSxFQUFFO0lBQ0pjLFFBQVEsRUFBRSxFQUROO0lBRUpDLFVBQVUsRUFBRSxLQUZSO0lBR0pDLFNBQVMsRUFBRTtFQUhQO0FBbkJ5QixDQUFsQixDQUFmOztlQTBCZTFCLE0ifQ==