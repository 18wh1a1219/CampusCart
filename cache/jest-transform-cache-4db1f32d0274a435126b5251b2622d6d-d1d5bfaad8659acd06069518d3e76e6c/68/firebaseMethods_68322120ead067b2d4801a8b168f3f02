877c42554464b5a40ad9d21f412c17a9
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loggingOut = loggingOut;
exports.post = post;
exports.registration = registration;
exports.signIn = signIn;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _firebase = _interopRequireDefault(require("firebase"));

var _reactNative = require("react-native");

function cov_gj18hmek4() {
  var path = "C:\\Users\\bhcha\\CampusCart\\API\\firebaseMethods.js";
  var hash = "da87b782e9eb875518bb5f7613bd64fac11738ab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\bhcha\\CampusCart\\API\\firebaseMethods.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "3": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "4": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 51
        }
      },
      "5": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 35
        }
      },
      "6": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "7": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "8": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "9": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "10": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "11": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 64
        }
      },
      "12": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "13": {
        start: {
          line: 34,
          column: 67
        },
        end: {
          line: 34,
          column: 81
        }
      },
      "14": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "15": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 4
        }
      },
      "17": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 28
        }
      },
      "18": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 42,
          column: 4
        }
      },
      "19": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 52
        }
      },
      "20": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 43,
          column: 28
        }
      },
      "21": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 44,
          column: 31
        }
      },
      "22": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 45,
          column: 17
        }
      },
      "23": {
        start: {
          line: 47,
          column: 14
        },
        end: {
          line: 47,
          column: 54
        }
      },
      "24": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 48,
          column: 58
        }
      },
      "25": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 75,
          column: 2
        }
      },
      "26": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 36
        }
      },
      "27": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 20
        }
      },
      "28": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "29": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 68
        }
      },
      "30": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 73,
          column: 12
        }
      },
      "31": {
        start: {
          line: 77,
          column: 1
        },
        end: {
          line: 77,
          column: 17
        }
      },
      "32": {
        start: {
          line: 83,
          column: 2
        },
        end: {
          line: 93,
          column: 3
        }
      },
      "33": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "34": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "35": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 32
        }
      },
      "36": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 40
        }
      },
      "37": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 58
        }
      },
      "38": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "39": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 36
        }
      },
      "40": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "registration",
        decl: {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 34
          }
        },
        loc: {
          start: {
            line: 4,
            column: 78
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 79
          },
          end: {
            line: 6,
            column: 80
          }
        },
        loc: {
          start: {
            line: 6,
            column: 97
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 6
      },
      "2": {
        name: "post",
        decl: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 30,
            column: 26
          }
        },
        loc: {
          start: {
            line: 30,
            column: 92
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 35,
            column: 36
          }
        },
        loc: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 18
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 17
          }
        },
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 42,
            column: 3
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 50,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 50
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        loc: {
          start: {
            line: 53,
            column: 11
          },
          end: {
            line: 55,
            column: 3
          }
        },
        line: 53
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 56,
            column: 2
          },
          end: {
            line: 56,
            column: 3
          }
        },
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 56
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 57,
            column: 44
          },
          end: {
            line: 57,
            column: 45
          }
        },
        loc: {
          start: {
            line: 57,
            column: 61
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 57
      },
      "10": {
        name: "signIn",
        decl: {
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 82,
            column: 28
          }
        },
        loc: {
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 82
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 84,
            column: 76
          },
          end: {
            line: 84,
            column: 77
          }
        },
        loc: {
          start: {
            line: 84,
            column: 88
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 84
      },
      "12": {
        name: "loggingOut",
        decl: {
          start: {
            line: 96,
            column: 22
          },
          end: {
            line: 96,
            column: 32
          }
        },
        loc: {
          start: {
            line: 96,
            column: 35
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 96
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: 86,
            column: 10
          },
          end: {
            line: 89,
            column: 5
          }
        }],
        line: 85
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "da87b782e9eb875518bb5f7613bd64fac11738ab"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_gj18hmek4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_gj18hmek4();

function registration(email, password, fullName, phone, address) {
  var currentUser, db;
  return _regenerator.default.async(function registration$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          cov_gj18hmek4().f[0]++;
          cov_gj18hmek4().s[0]++;
          _context.prev = 2;
          cov_gj18hmek4().s[1]++;
          _context.next = 6;
          return _regenerator.default.awrap(_firebase.default.auth().createUserWithEmailAndPassword(email, password).then(function (userCredential) {
            cov_gj18hmek4().f[1]++;
            cov_gj18hmek4().s[2]++;
            userCredential.user.sendEmailVerification();
            cov_gj18hmek4().s[3]++;

            _reactNative.Alert.alert("Email sent");
          }));

        case 6:
          currentUser = (cov_gj18hmek4().s[4]++, _firebase.default.auth().currentUser);
          db = (cov_gj18hmek4().s[5]++, _firebase.default.firestore());
          cov_gj18hmek4().s[6]++;
          db.collection("users").doc(currentUser.uid).set({
            uid: currentUser.uid,
            email: currentUser.email,
            fullName: fullName,
            phone: phone,
            count: 0,
            rating: 0,
            address: address
          });
          cov_gj18hmek4().s[7]++;

          _firebase.default.auth().signOut();

          _context.next = 18;
          break;

        case 14:
          _context.prev = 14;
          _context.t0 = _context["catch"](2);
          cov_gj18hmek4().s[8]++;

          _reactNative.Alert.alert("There is something wrong!!!!", _context.t0.message);

        case 18:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, [[2, 14]], Promise);
}

function post(productName, desc, price, image, category, userName, userRating) {
  var currentUser, filename, uploadUri, formData, blob, ref, task;
  return _regenerator.default.async(function post$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          cov_gj18hmek4().f[2]++;
          cov_gj18hmek4().s[9]++;
          _context2.prev = 2;
          currentUser = (cov_gj18hmek4().s[10]++, _firebase.default.auth().currentUser);
          filename = (cov_gj18hmek4().s[11]++, image.substring(image.lastIndexOf('/') + 1));
          uploadUri = (cov_gj18hmek4().s[12]++, image.replace('file://', ''));
          formData = (cov_gj18hmek4().s[13]++, new FormData());
          cov_gj18hmek4().s[14]++;
          _context2.next = 10;
          return _regenerator.default.awrap(new Promise(function (resolve, reject) {
            cov_gj18hmek4().f[3]++;
            var xhr = (cov_gj18hmek4().s[15]++, new XMLHttpRequest());
            cov_gj18hmek4().s[16]++;

            xhr.onload = function () {
              cov_gj18hmek4().f[4]++;
              cov_gj18hmek4().s[17]++;
              resolve(xhr.response);
            };

            cov_gj18hmek4().s[18]++;

            xhr.onerror = function () {
              cov_gj18hmek4().f[5]++;
              cov_gj18hmek4().s[19]++;
              reject(new TypeError("Network request failed"));
            };

            cov_gj18hmek4().s[20]++;
            xhr.responseType = "blob";
            cov_gj18hmek4().s[21]++;
            xhr.open("GET", image, true);
            cov_gj18hmek4().s[22]++;
            xhr.send(null);
          }));

        case 10:
          blob = _context2.sent;
          ref = (cov_gj18hmek4().s[23]++, _firebase.default.storage().ref().child(filename));
          task = (cov_gj18hmek4().s[24]++, ref.put(blob, {
            contentType: 'image/jpg'
          }));
          cov_gj18hmek4().s[25]++;
          task.on('state_changed', function (snapshot) {
            cov_gj18hmek4().f[6]++;
            cov_gj18hmek4().s[26]++;
            console.log(snapshot.totalBytes);
          }, function (err) {
            cov_gj18hmek4().f[7]++;
            cov_gj18hmek4().s[27]++;
            console.log(err);
          }, function () {
            cov_gj18hmek4().f[8]++;
            cov_gj18hmek4().s[28]++;
            task.snapshot.ref.getDownloadURL().then(function (downloadURL) {
              cov_gj18hmek4().f[9]++;
              var newDocRef = (cov_gj18hmek4().s[29]++, _firebase.default.firestore().collection('posts').doc());
              cov_gj18hmek4().s[30]++;
              newDocRef.set({
                productName: productName,
                desc: desc,
                price: price,
                image: downloadURL,
                category: category,
                createdAt: new Date().toLocaleString(),
                userId: _firebase.default.auth().currentUser.uid,
                userName: userName,
                status: "available",
                buyer: "",
                rating: 0,
                id: newDocRef.id,
                userRating: userRating
              });
            });
          });
          _context2.next = 21;
          break;

        case 17:
          _context2.prev = 17;
          _context2.t0 = _context2["catch"](2);
          cov_gj18hmek4().s[31]++;
          console.log(_context2.t0);

        case 21:
        case "end":
          return _context2.stop();
      }
    }
  }, null, null, [[2, 17]], Promise);
}

function signIn(email, password) {
  return _regenerator.default.async(function signIn$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          cov_gj18hmek4().f[10]++;
          cov_gj18hmek4().s[32]++;
          _context3.prev = 2;
          cov_gj18hmek4().s[33]++;
          _context3.next = 6;
          return _regenerator.default.awrap(_firebase.default.auth().signInWithEmailAndPassword(email, password).then(function (authUser) {
            cov_gj18hmek4().f[11]++;
            cov_gj18hmek4().s[34]++;

            if (authUser.user.emailVerified) {
              cov_gj18hmek4().b[0][0]++;
            } else {
              cov_gj18hmek4().b[0][1]++;
              cov_gj18hmek4().s[35]++;

              _firebase.default.auth().signOut();

              cov_gj18hmek4().s[36]++;

              _reactNative.Alert.alert('email not verified');
            }
          }));

        case 6:
          _context3.next = 12;
          break;

        case 8:
          _context3.prev = 8;
          _context3.t0 = _context3["catch"](2);
          cov_gj18hmek4().s[37]++;

          _reactNative.Alert.alert("There is something wrong!", _context3.t0.message);

        case 12:
        case "end":
          return _context3.stop();
      }
    }
  }, null, null, [[2, 8]], Promise);
}

function loggingOut() {
  return _regenerator.default.async(function loggingOut$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          cov_gj18hmek4().f[12]++;
          cov_gj18hmek4().s[38]++;
          _context4.prev = 2;
          cov_gj18hmek4().s[39]++;
          _context4.next = 6;
          return _regenerator.default.awrap(_firebase.default.auth().signOut());

        case 6:
          _context4.next = 12;
          break;

        case 8:
          _context4.prev = 8;
          _context4.t0 = _context4["catch"](2);
          cov_gj18hmek4().s[40]++;

          _reactNative.Alert.alert('There is something wrong!', _context4.t0.message);

        case 12:
        case "end":
          return _context4.stop();
      }
    }
  }, null, null, [[2, 8]], Promise);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWdpc3RyYXRpb24iLCJlbWFpbCIsInBhc3N3b3JkIiwiZnVsbE5hbWUiLCJwaG9uZSIsImFkZHJlc3MiLCJmaXJlYmFzZSIsImF1dGgiLCJjcmVhdGVVc2VyV2l0aEVtYWlsQW5kUGFzc3dvcmQiLCJ0aGVuIiwidXNlckNyZWRlbnRpYWwiLCJ1c2VyIiwic2VuZEVtYWlsVmVyaWZpY2F0aW9uIiwiQWxlcnQiLCJhbGVydCIsImN1cnJlbnRVc2VyIiwiZGIiLCJmaXJlc3RvcmUiLCJjb2xsZWN0aW9uIiwiZG9jIiwidWlkIiwic2V0IiwiY291bnQiLCJyYXRpbmciLCJzaWduT3V0IiwibWVzc2FnZSIsInBvc3QiLCJwcm9kdWN0TmFtZSIsImRlc2MiLCJwcmljZSIsImltYWdlIiwiY2F0ZWdvcnkiLCJ1c2VyTmFtZSIsInVzZXJSYXRpbmciLCJmaWxlbmFtZSIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwidXBsb2FkVXJpIiwicmVwbGFjZSIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInhociIsIlhNTEh0dHBSZXF1ZXN0Iiwib25sb2FkIiwicmVzcG9uc2UiLCJvbmVycm9yIiwiVHlwZUVycm9yIiwicmVzcG9uc2VUeXBlIiwib3BlbiIsInNlbmQiLCJibG9iIiwicmVmIiwic3RvcmFnZSIsImNoaWxkIiwidGFzayIsInB1dCIsImNvbnRlbnRUeXBlIiwib24iLCJzbmFwc2hvdCIsImNvbnNvbGUiLCJsb2ciLCJ0b3RhbEJ5dGVzIiwiZXJyIiwiZ2V0RG93bmxvYWRVUkwiLCJkb3dubG9hZFVSTCIsIm5ld0RvY1JlZiIsImNyZWF0ZWRBdCIsIkRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsInVzZXJJZCIsInN0YXR1cyIsImJ1eWVyIiwiaWQiLCJzaWduSW4iLCJzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCIsImF1dGhVc2VyIiwiZW1haWxWZXJpZmllZCIsImxvZ2dpbmdPdXQiXSwic291cmNlcyI6WyJmaXJlYmFzZU1ldGhvZHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7XHJcbmltcG9ydCB7QWxlcnR9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdHJhdGlvbihlbWFpbCwgcGFzc3dvcmQsIGZ1bGxOYW1lLCBwaG9uZSwgYWRkcmVzcykge1xyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBmaXJlYmFzZS5hdXRoKCkuY3JlYXRlVXNlcldpdGhFbWFpbEFuZFBhc3N3b3JkKGVtYWlsLCBwYXNzd29yZCkudGhlbigodXNlckNyZWRlbnRpYWwpPT57XHJcbiAgICB1c2VyQ3JlZGVudGlhbC51c2VyLnNlbmRFbWFpbFZlcmlmaWNhdGlvbigpO1xyXG4gICAgQWxlcnQuYWxlcnQoXCJFbWFpbCBzZW50XCIpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zdCBjdXJyZW50VXNlciA9IGZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlcjtcclxuICAgIGNvbnN0IGRiID0gZmlyZWJhc2UuZmlyZXN0b3JlKCk7XHJcbiAgICBkYi5jb2xsZWN0aW9uKFwidXNlcnNcIilcclxuICAgICAgLmRvYyhjdXJyZW50VXNlci51aWQpXHJcbiAgICAgIC5zZXQoe1xyXG4gICAgICAgIHVpZDogY3VycmVudFVzZXIudWlkLFxyXG4gICAgICAgIGVtYWlsOiBjdXJyZW50VXNlci5lbWFpbCxcclxuICAgICAgICBmdWxsTmFtZTogZnVsbE5hbWUsXHJcbiAgICAgICAgcGhvbmU6IHBob25lLFxyXG4gICAgICAgIGNvdW50OiAwLFxyXG4gICAgICAgIHJhdGluZzogMCxcclxuICAgICAgICBhZGRyZXNzOiBhZGRyZXNzXHJcbiAgICAgIH0pO1xyXG4gICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25PdXQoKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIEFsZXJ0LmFsZXJ0KFwiVGhlcmUgaXMgc29tZXRoaW5nIHdyb25nISEhIVwiLCBlcnIubWVzc2FnZSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBvc3QocHJvZHVjdE5hbWUsIGRlc2MsIHByaWNlLCBpbWFnZSwgY2F0ZWdvcnksIHVzZXJOYW1lLCB1c2VyUmF0aW5nKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGN1cnJlbnRVc2VyID0gZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyO1xyXG4gICAgY29uc3QgZmlsZW5hbWUgPSBpbWFnZS5zdWJzdHJpbmcoaW1hZ2UubGFzdEluZGV4T2YoJy8nKSArIDEpO1xyXG4gICAgY29uc3QgdXBsb2FkVXJpID0gIGltYWdlLnJlcGxhY2UoJ2ZpbGU6Ly8nLCAnJyk7bGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgICBjb25zdCBibG9iID0gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICB4aHIub25sb2FkID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJlc29sdmUoeGhyLnJlc3BvbnNlKTtcclxuICB9O1xyXG4gIHhoci5vbmVycm9yID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZWplY3QobmV3IFR5cGVFcnJvcihcIk5ldHdvcmsgcmVxdWVzdCBmYWlsZWRcIikpO1xyXG4gIH07XHJcbiAgeGhyLnJlc3BvbnNlVHlwZSA9IFwiYmxvYlwiO1xyXG4gIHhoci5vcGVuKFwiR0VUXCIsIGltYWdlLCB0cnVlKTtcclxuICB4aHIuc2VuZChudWxsKTtcclxufSk7XHJcbiAgY29uc3QgcmVmID0gZmlyZWJhc2Uuc3RvcmFnZSgpLnJlZigpLmNoaWxkKGZpbGVuYW1lKTtcclxuICBjb25zdCB0YXNrID0gcmVmLnB1dChibG9iLCB7IGNvbnRlbnRUeXBlOiAnaW1hZ2UvanBnJyB9KTtcclxuICB0YXNrLm9uKCdzdGF0ZV9jaGFuZ2VkJywgXHJcbiAgKHNuYXBzaG90KSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhzbmFwc2hvdC50b3RhbEJ5dGVzKVxyXG4gIH0sIFxyXG4gIChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycilcclxuICB9LCBcclxuICAoKSA9PiB7XHJcbiAgICB0YXNrLnNuYXBzaG90LnJlZi5nZXREb3dubG9hZFVSTCgpLnRoZW4oKGRvd25sb2FkVVJMKSA9PiB7XHJcbiAgICAgIHZhciBuZXdEb2NSZWYgPSBmaXJlYmFzZS5maXJlc3RvcmUoKS5jb2xsZWN0aW9uKCdwb3N0cycpLmRvYygpO1xyXG4gICAgICBuZXdEb2NSZWYuc2V0KHtcclxuICAgICAgICAgICAgICAgICAgcHJvZHVjdE5hbWU6IHByb2R1Y3ROYW1lLFxyXG4gICAgICAgICAgICAgICAgICBkZXNjOiBkZXNjLFxyXG4gICAgICAgICAgICAgICAgICBwcmljZTogcHJpY2UsXHJcbiAgICAgICAgICAgICAgICAgIGltYWdlOiBkb3dubG9hZFVSTCxcclxuICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5LFxyXG4gICAgICAgICAgICAgICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKSxcclxuICAgICAgICAgICAgICAgICAgdXNlcklkOiBmaXJlYmFzZS5hdXRoKCkuY3VycmVudFVzZXIudWlkLFxyXG4gICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlck5hbWUsXHJcbiAgICAgICAgICAgICAgICAgIHN0YXR1czogXCJhdmFpbGFibGVcIixcclxuICAgICAgICAgICAgICAgICAgYnV5ZXI6IFwiXCIsXHJcbiAgICAgICAgICAgICAgICAgIHJhdGluZzowLFxyXG4gICAgICAgICAgICAgICAgIGlkOiBuZXdEb2NSZWYuaWQsXHJcbiAgICAgICAgICAgICAgICAgdXNlclJhdGluZzogdXNlclJhdGluZ1xyXG4gICAgICAgICAgfSlcclxuICB9KTtcclxufSlcclxufSBjYXRjaChlcnIpIHtcclxuIGNvbnNvbGUubG9nKGVycilcclxufVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25JbihlbWFpbCwgcGFzc3dvcmQpIHtcclxuICB0cnl7XHJcbiAgICBhd2FpdCBmaXJlYmFzZS5hdXRoKCkuc2lnbkluV2l0aEVtYWlsQW5kUGFzc3dvcmQoZW1haWwsIHBhc3N3b3JkICkudGhlbihhdXRoVXNlciA9PiB7XHJcbiAgICBpZihhdXRoVXNlci51c2VyLmVtYWlsVmVyaWZpZWQpeyBcclxuICAgIH0gZWxzZXtcclxuICAgICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25PdXQoKTtcclxuICAgICAgQWxlcnQuYWxlcnQoJ2VtYWlsIG5vdCB2ZXJpZmllZCcpO1xyXG4gICAgfVxyXG4gICAgfSlcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIEFsZXJ0LmFsZXJ0KFwiVGhlcmUgaXMgc29tZXRoaW5nIHdyb25nIVwiLCBlcnIubWVzc2FnZSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9nZ2luZ091dCgpIHtcclxuICB0cnkge1xyXG4gICAgYXdhaXQgZmlyZWJhc2UuYXV0aCgpLnNpZ25PdXQoKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIEFsZXJ0LmFsZXJ0KCdUaGVyZSBpcyBzb21ldGhpbmcgd3JvbmchJywgZXJyLm1lc3NhZ2UpO1xyXG4gIH1cclxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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