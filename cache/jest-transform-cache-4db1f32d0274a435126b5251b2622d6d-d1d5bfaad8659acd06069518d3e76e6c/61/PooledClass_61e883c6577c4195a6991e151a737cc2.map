{"version":3,"names":["oneArgumentPooler","copyFieldsFrom","Klass","instancePool","length","instance","pop","call","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","standardReleaser","destructor","poolSize","push","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","PooledClass","module","exports"],"sources":["PooledClass.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\nimport invariant from 'invariant';\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nconst oneArgumentPooler = function (copyFieldsFrom) {\n  const Klass = this; // eslint-disable-line consistent-this\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nconst twoArgumentPooler = function (a1, a2) {\n  const Klass = this; // eslint-disable-line consistent-this\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nconst threeArgumentPooler = function (a1, a2, a3) {\n  const Klass = this; // eslint-disable-line consistent-this\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nconst fourArgumentPooler = function (a1, a2, a3, a4) {\n  const Klass = this; // eslint-disable-line consistent-this\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nconst standardReleaser = function (instance) {\n  const Klass = this; // eslint-disable-line consistent-this\n  invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.',\n  );\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nconst DEFAULT_POOL_SIZE = 10;\nconst DEFAULT_POOLER = oneArgumentPooler;\n\ntype Pooler = any;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nconst addPoolingTo = function <T>(\n  CopyConstructor: Class<T>,\n  pooler: Pooler,\n): Class<T> & {\n  getPooled(\n    ...args: $ReadOnlyArray<mixed>\n  ): /* arguments of the constructor */ T,\n  release(instance: mixed): void,\n  ...\n} {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  const NewKlass = (CopyConstructor: any);\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nconst PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: (oneArgumentPooler: Pooler),\n  twoArgumentPooler: (twoArgumentPooler: Pooler),\n  threeArgumentPooler: (threeArgumentPooler: Pooler),\n  fourArgumentPooler: (fourArgumentPooler: Pooler),\n};\n\nmodule.exports = PooledClass;\n"],"mappings":"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"}