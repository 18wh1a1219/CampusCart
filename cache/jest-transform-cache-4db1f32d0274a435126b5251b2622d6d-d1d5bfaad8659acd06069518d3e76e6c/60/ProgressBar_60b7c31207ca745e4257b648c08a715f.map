{"version":3,"mappings":"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","names":["INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","I18nManager","ProgressBar","color","indeterminate","style","progress","visible","theme","rest","React","useRef","Animated","Value","timer","current","fade","useState","width","setWidth","prevWidth","setPrevWidth","indeterminateAnimation","scale","animation","startAnimation","useCallback","timing","duration","toValue","useNativeDriver","isInteraction","start","Platform","OS","setValue","loop","stopAnimation","stop","useEffect","onLayout","event","nativeEvent","layout","tintColor","colors","primary","trackTintColor","alpha","rgb","string","_reactNative","accessible","accessibilityRole","accessibilityState","busy","accessibilityValue","min","max","now","View","styles","container","backgroundColor","opacity","progressBar","transform","translateX","interpolate","inputRange","outputRange","scaleX","StyleSheet","create","height","overflow","flex"],"sources":["ProgressBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n  I18nManager,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = ({\n  color,\n  indeterminate,\n  style,\n  progress = 0,\n  visible = true,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(0));\n  const [width, setWidth] = React.useState<number>(0);\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\n\n  const indeterminateAnimation =\n    React.useRef<Animated.CompositeAnimation | null>(null);\n\n  const { scale } = theme.animation;\n\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }, [fade, scale]);\n\n  React.useEffect(() => {\n    if (visible) startAnimation();\n    else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  const tintColor = color || theme.colors.primary;\n  const trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n\n  return (\n    <View\n      onLayout={onLayout}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: visible }}\n      accessibilityValue={\n        indeterminate ? {} : { min: 0, max: 100, now: progress * 100 }\n      }\n    >\n      <Animated.View\n        style={[\n          styles.container,\n          { backgroundColor: trackTintColor, opacity: fade },\n          style,\n        ]}\n      >\n        {width ? (\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                width,\n                backgroundColor: tintColor,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        ) : null}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]}