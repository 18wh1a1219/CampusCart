29a8b6c227f455c5a888fdb214a82db1
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SignUp;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativeGestureHandler = require("react-native-gesture-handler");

var _firebaseMethods = require("../API/firebaseMethods");

var _reactNativeRadioButtons = require("react-native-radio-buttons");

var _FloatingLabelInput = require("./FloatingLabelInput");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function SignUp(_ref) {
  var navigation = _ref.navigation;

  var _useState = (0, _react.useState)(''),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      fullName = _useState2[0],
      setFullName = _useState2[1];

  var _useState3 = (0, _react.useState)(''),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      phone = _useState4[0],
      setPhone = _useState4[1];

  var _useState5 = (0, _react.useState)(''),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      email = _useState6[0],
      setEmail = _useState6[1];

  var _useState7 = (0, _react.useState)(''),
      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
      password = _useState8[0],
      setPassword = _useState8[1];

  var _useState9 = (0, _react.useState)(''),
      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
      confirmPassword = _useState10[0],
      setConfirmPassword = _useState10[1];

  var options = ['I', 'II', 'III', 'IV'];

  var _useState11 = (0, _react.useState)(''),
      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),
      address = _useState12[0],
      setAddress = _useState12[1];

  var emptyState = function emptyState() {
    setFullName('');
    setPhone('');
    setEmail('');
    setPassword('');
    setConfirmPassword('');
    setAddress('');
  };

  var handlePress = function handlePress() {
    if (!fullName) {
      _reactNative.Alert.alert('Name is required');
    } else if (!phone) {
      _reactNative.Alert.alert('Phone Number field is required.');
    } else if (!phone.match(/^[6789]\d{9}/ig)) {
      _reactNative.Alert.alert('Invalid Phone Number');
    } else if (!email) {
      _reactNative.Alert.alert('Email field is required.');
    } else if (!password) {
      _reactNative.Alert.alert('Password field is required.');
    } else if (!confirmPassword) {
      setPassword('');

      _reactNative.Alert.alert('Confirm password field is required.');
    } else if (!address) {
      _reactNative.Alert.alert('Address field is required.');
    } else if (password.length < 6) {
      _reactNative.Alert.alert('Password must be atleast 6 characters long!');
    } else if (password !== confirmPassword) {
      _reactNative.Alert.alert('Password does not match!');
    } else {
      if (email.match(/^[a-z0-9](\.?[a-z0-9]){5,}@bvrithyderabad\.edu\.in(\W|$)/ig)) {
        (0, _firebaseMethods.registration)(email, password, fullName, phone, address);
        navigation.navigate('Loading');
        emptyState();
      } else {
        _reactNative.Alert.alert('Valid bvrithyderabad emails are accepted.');
      }
    }
  };

  return _react.default.createElement(_reactNative.SafeAreaView, null, _react.default.createElement(_reactNative.View, {
    style: styles.container
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.text
  }, "Create an account "), _react.default.createElement(_reactNative.ScrollView, {
    onBlur: _reactNative.Keyboard.dismiss
  }, _react.default.createElement(_FloatingLabelInput.FloatingLabelInput, {
    label: "Full Name*",
    value: fullName,
    onChangeText: function onChangeText(fullName) {
      return setFullName(fullName);
    }
  }), _react.default.createElement(_FloatingLabelInput.FloatingLabelInput, {
    style: styles.textInput,
    label: "Phone Number*",
    value: phone,
    onChangeText: function onChangeText(phone) {
      return setPhone(phone);
    },
    autoCapitalize: "none"
  }), _react.default.createElement(_FloatingLabelInput.FloatingLabelInput, {
    label: "Email*",
    value: email,
    onChangeText: function onChangeText(email) {
      return setEmail(email);
    },
    keyboardType: "email-address",
    autoCapitalize: "none"
  }), _react.default.createElement(_FloatingLabelInput.FloatingLabelInput, {
    label: "Password*",
    value: password,
    onChangeText: function onChangeText(password) {
      return setPassword(password);
    },
    secureTextEntry: true
  }), _react.default.createElement(_FloatingLabelInput.FloatingLabelInput, {
    label: "Confirm password*",
    value: confirmPassword,
    onChangeText: function onChangeText(password2) {
      return setConfirmPassword(password2);
    },
    secureTextEntry: true
  }), _react.default.createElement(_FloatingLabelInput.FloatingLabelInput, {
    label: "Address*",
    value: address,
    onChangeText: function onChangeText(address) {
      return setAddress(address);
    }
  }), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {
    style: styles.button,
    onPress: handlePress
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.buttonText
  }, "Sign Up")), _react.default.createElement(_reactNative.Text, {
    style: styles.inlineText
  }, "Already have an account?"), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {
    style: styles.button,
    onPress: function onPress() {
      return navigation.navigate('Sign In');
    }
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.buttonText
  }, "Sign In")))));
}

var styles = _reactNative.StyleSheet.create({
  container: {
    height: '100%',
    width: '100%',
    backgroundColor: '#ECF3FB',
    alignItems: 'center',
    justifyContent: 'center'
  },
  button: {
    width: 355,
    padding: 10,
    backgroundColor: '#ffd60a',
    borderWidth: 0,
    borderColor: 'black',
    borderRadius: 15,
    alignSelf: 'center',
    height: 50
  },
  buttonText: {
    fontSize: 18,
    color: 'black',
    fontWeight: 'bold',
    textAlign: 'center'
  },
  inlineText: {
    fontSize: 14,
    fontWeight: 'bold',
    color: 'black',
    textAlign: 'center',
    marginTop: '5%'
  },
  text: {
    textAlign: 'center',
    fontSize: 25,
    margin: '5%',
    marginTop: '15%',
    fontWeight: 'bold',
    color: 'black'
  },
  textInput: {
    width: 300,
    fontSize: 15,
    borderWidth: 2,
    borderColor: '#48494B',
    padding: 10,
    margin: 5
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,