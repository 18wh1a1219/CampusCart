{"version":3,"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGe,SAASA,SAAT,GAAqB;EAClC,sBAA4BC,KAAK,CAACC,QAAND,CAIzB;IAAEE,MAAM,EAAE,CAAV;IAAaC,KAAK,EAAE,CAApB;IAAuBC,QAAQ,EAAE;EAAjC,CAJyBJ,CAA5B;EAAA;EAAA,IAAOK,MAAP;EAAA,IAAeC,SAAf;;EAMA,IAAMC,QAAQ,GAAGP,KAAK,CAACQ,WAANR,CACdS,WAAD,EAA0B;IACxB,4BAA0BA,CAAC,CAACC,WAAFD,CAAcJ,MAAxC;IAAA,IAAQH,MAAR,yBAAQA,MAAR;IAAA,IAAgBC,KAAhB,yBAAgBA,KAAhB;;IAEA,IAAID,MAAM,KAAKG,MAAM,CAACH,MAAlBA,IAA4BC,KAAK,KAAKE,MAAM,CAACF,KAAjD,EAAwD;MACtD;IACD;;IAEDG,SAAS,CAAC;MACRJ,MADQ,EACRA,MADQ;MAERC,KAFQ,EAERA,KAFQ;MAGRC,QAAQ,EAAE;IAHF,CAAD,CAATE;EARa,GAcf,CAACD,MAAM,CAACH,MAAR,EAAgBG,MAAM,CAACF,KAAvB,CAdeH,CAAjB;EAiBA,OAAO,CAACK,MAAD,EAASE,QAAT,CAAP;AACD","names":["useLayout","React","useState","height","width","measured","layout","setLayout","onLayout","useCallback","e","nativeEvent"],"sources":["useLayout.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\n\nexport default function useLayout() {\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    width: number;\n    measured: boolean;\n  }>({ height: 0, width: 0, measured: false });\n\n  const onLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      const { height, width } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      setLayout({\n        height,\n        width,\n        measured: true,\n      });\n    },\n    [layout.height, layout.width]\n  );\n\n  return [layout, onLayout] as const;\n}\n"]}