25dd2de6ec0eec741b7f3d7be7088bc3
"use strict";

exports.__esModule = true;
exports.default = validate;

var _warning = _interopRequireDefault(require("fbjs/lib/warning"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var invalidShortforms = {
  background: true,
  borderBottom: true,
  borderLeft: true,
  borderRight: true,
  borderTop: true,
  font: true,
  grid: true,
  outline: true,
  textDecoration: true
};

function error(message) {
  (0, _warning.default)(false, message);
}

function validate(key, styles) {
  var obj = styles[key];

  for (var k in obj) {
    var prop = k.trim();
    var value = obj[prop];
    var isInvalid = false;

    if (value === null) {
      continue;
    }

    if (typeof value === 'string' && value.indexOf('!important') > -1) {
      error("Invalid style declaration \"" + prop + ":" + value + "\". Values cannot include \"!important\"");
      isInvalid = true;
    } else {
      var suggestion = '';

      if (prop === 'animation' || prop === 'animationName') {
        suggestion = 'Did you mean "animationKeyframes"?';
        isInvalid = true;
      } else if (prop === 'direction') {
        suggestion = 'Did you mean "writingDirection"?';
        isInvalid = true;
      } else if (prop === 'verticalAlign') {
        suggestion = 'Did you mean "textAlignVertical"?';
        isInvalid = true;
      } else if (invalidShortforms[prop]) {
        suggestion = 'Please use long-form properties.';
        isInvalid = true;
      }

      if (suggestion !== '') {
        error("Invalid style property of \"" + prop + "\". " + suggestion);
      }
    }

    if (isInvalid) {
      delete obj[k];
    }
  }
}

module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ2YWxpZGF0ZSIsIl93YXJuaW5nIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJpbnZhbGlkU2hvcnRmb3JtcyIsImJhY2tncm91bmQiLCJib3JkZXJCb3R0b20iLCJib3JkZXJMZWZ0IiwiYm9yZGVyUmlnaHQiLCJib3JkZXJUb3AiLCJmb250IiwiZ3JpZCIsIm91dGxpbmUiLCJ0ZXh0RGVjb3JhdGlvbiIsImVycm9yIiwibWVzc2FnZSIsImtleSIsInN0eWxlcyIsImsiLCJwcm9wIiwidHJpbSIsInZhbHVlIiwiaXNJbnZhbGlkIiwiaW5kZXhPZiIsInN1Z2dlc3Rpb24iLCJtb2R1bGUiXSwic291cmNlcyI6WyJ2YWxpZGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZhbGlkYXRlO1xuXG52YXIgX3dhcm5pbmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJmYmpzL2xpYi93YXJuaW5nXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE5pY29sYXMgR2FsbGFnaGVyLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG52YXIgaW52YWxpZFNob3J0Zm9ybXMgPSB7XG4gIGJhY2tncm91bmQ6IHRydWUsXG4gIGJvcmRlckJvdHRvbTogdHJ1ZSxcbiAgYm9yZGVyTGVmdDogdHJ1ZSxcbiAgYm9yZGVyUmlnaHQ6IHRydWUsXG4gIGJvcmRlclRvcDogdHJ1ZSxcbiAgZm9udDogdHJ1ZSxcbiAgZ3JpZDogdHJ1ZSxcbiAgb3V0bGluZTogdHJ1ZSxcbiAgdGV4dERlY29yYXRpb246IHRydWVcbn07XG5cbmZ1bmN0aW9uIGVycm9yKG1lc3NhZ2UpIHtcbiAgKDAsIF93YXJuaW5nLmRlZmF1bHQpKGZhbHNlLCBtZXNzYWdlKTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGUoa2V5LCBzdHlsZXMpIHtcbiAgdmFyIG9iaiA9IHN0eWxlc1trZXldO1xuXG4gIGZvciAodmFyIGsgaW4gb2JqKSB7XG4gICAgdmFyIHByb3AgPSBrLnRyaW0oKTtcbiAgICB2YXIgdmFsdWUgPSBvYmpbcHJvcF07XG4gICAgdmFyIGlzSW52YWxpZCA9IGZhbHNlO1xuXG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5pbmRleE9mKCchaW1wb3J0YW50JykgPiAtMSkge1xuICAgICAgZXJyb3IoXCJJbnZhbGlkIHN0eWxlIGRlY2xhcmF0aW9uIFxcXCJcIiArIHByb3AgKyBcIjpcIiArIHZhbHVlICsgXCJcXFwiLiBWYWx1ZXMgY2Fubm90IGluY2x1ZGUgXFxcIiFpbXBvcnRhbnRcXFwiXCIpO1xuICAgICAgaXNJbnZhbGlkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHN1Z2dlc3Rpb24gPSAnJztcblxuICAgICAgaWYgKHByb3AgPT09ICdhbmltYXRpb24nIHx8IHByb3AgPT09ICdhbmltYXRpb25OYW1lJykge1xuICAgICAgICBzdWdnZXN0aW9uID0gJ0RpZCB5b3UgbWVhbiBcImFuaW1hdGlvbktleWZyYW1lc1wiPyc7IC8vIH0gZWxzZSBpZiAocHJvcCA9PT0gJ2JveFNoYWRvdycpIHtcbiAgICAgICAgLy8gIHN1Z2dlc3Rpb24gPSAnRGlkIHlvdSBtZWFuIFwic2hhZG93e0NvbG9yLE9mZnNldCxPcGFjaXR5LFJhZGl1c31cIj8nO1xuXG4gICAgICAgIGlzSW52YWxpZCA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09ICdkaXJlY3Rpb24nKSB7XG4gICAgICAgIHN1Z2dlc3Rpb24gPSAnRGlkIHlvdSBtZWFuIFwid3JpdGluZ0RpcmVjdGlvblwiPyc7XG4gICAgICAgIGlzSW52YWxpZCA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09ICd2ZXJ0aWNhbEFsaWduJykge1xuICAgICAgICBzdWdnZXN0aW9uID0gJ0RpZCB5b3UgbWVhbiBcInRleHRBbGlnblZlcnRpY2FsXCI/JztcbiAgICAgICAgaXNJbnZhbGlkID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAoaW52YWxpZFNob3J0Zm9ybXNbcHJvcF0pIHtcbiAgICAgICAgc3VnZ2VzdGlvbiA9ICdQbGVhc2UgdXNlIGxvbmctZm9ybSBwcm9wZXJ0aWVzLic7XG4gICAgICAgIGlzSW52YWxpZCA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdWdnZXN0aW9uICE9PSAnJykge1xuICAgICAgICBlcnJvcihcIkludmFsaWQgc3R5bGUgcHJvcGVydHkgb2YgXFxcIlwiICsgcHJvcCArIFwiXFxcIi4gXCIgKyBzdWdnZXN0aW9uKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaXNJbnZhbGlkKSB7XG4gICAgICBkZWxldGUgb2JqW2tdO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDRSxPQUFSLEdBQWtCQyxRQUFsQjs7QUFFQSxJQUFJQyxRQUFRLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsa0JBQUQsQ0FBUixDQUFyQzs7QUFFQSxTQUFTRCxzQkFBVCxDQUFnQ0UsR0FB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