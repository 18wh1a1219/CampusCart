{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAOA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMqBA,gB;;;;;EAEnB;IAAA;;IAAA;;IAAA;MAAAC;IAAA;;IAAA;;IAAAC,gGAOkC,YAAM;MACtC,IAAMC,UAAU,GAAGC,wBAAWC,OAAXD,CAAmB,MAAKE,KAAL,CAAWC,KAA9BH,KAAwC,EAA3D;MACA,OAAOD,UAAU,CAACK,OAAXL,IAAsB,IAAtBA,GAA6B,CAA7BA,GAAiCA,UAAU,CAACK,OAAnD;IATF;;IAAAN,wEAYU,IAAIO,sBAASC,KAAb,CAAmB,MAAKC,+BAAL,EAAnB,CAZV;;IAAAT,6EAce,UAACU,KAAD,EAAgBC,QAAhB,EAAqC;MAClDJ,sBAASK,MAATL,CAAgB,MAAKD,OAArBC,EAA8B;QAC5BM,OAAO,EAAEH,KADmB;QAE5BC,QAAQ,EAAEA,QAFkB;QAG5BG,MAAM,EAAEC,oBAAOC,KAAPD,CAAaA,oBAAOE,IAApBF,CAHoB;QAI5BG,eAAe,EAAE;MAJW,CAA9BX,EAKGY,KALHZ;IAfF;;IAAAP,8EAuBgB,UAACoB,KAAD,EAAgBC,EAAhB,EAA+B;MAC7C,IAAIA,EAAE,KAAKC,kCAAgBC,KAA3B,EAAkC;QAChC,MAAKC,YAAL,CAAkB,MAAKpB,KAAL,CAAWqB,aAA7B,EAA6C,CAA7C;MADF,OAEO,IACLJ,EAAE,KAAKC,kCAAgBI,YAAvBL,IACAA,EAAE,KAAKC,kCAAgBK,aAFlB,EAGL;QACA,MAAKH,YAAL,CAAkB,MAAKf,+BAAL,EAAlB,EAA0D,GAA1D;MACD;IA/BH;;IAAA;EAAA;;;;WAkCAmB,kBAAS;MACP,kBAAgC,KAAKxB,KAArC;MAAA,oCAAQC,KAAR;MAAA,IAAQA,KAAR,kCAAgB,EAAhB;MAAA,IAAuBwB,IAAvB;MACA,OACEC,oBAACC,yBAAD,eACMF,IADN;QAEExB,KAAK,EAAE,CACLA,KADK,EAEL;UACEC,OAAO,EAAG,KAAKA;QADjB,CAFK,CAFT;QAQE0B,aAAa,EAAE,KAAKA;MARtB,IASG,KAAK5B,KAAL,CAAW6B,QAAX,GAAsB,KAAK7B,KAAL,CAAW6B,QAAjC,GAA4CH,oBAACI,iBAAD,OAT/C,CADF;IAaD;;;EAnD2CC,e;;;;gBAAzBrC,kB,2CAIdsC,0BAAiBC;EACpBZ,aAAa,EAAE","names":["TouchableOpacity","args","_defineProperty","childStyle","StyleSheet","flatten","props","style","opacity","Animated","Value","getChildStyleOpacityWithDefault","value","duration","timing","toValue","easing","Easing","inOut","quad","useNativeDriver","start","_from","to","TOUCHABLE_STATE","BEGAN","setOpacityTo","activeOpacity","UNDETERMINED","MOVED_OUTSIDE","render","rest","React","_GenericTouchable","onStateChange","children","_reactNative","Component","GenericTouchable","defaultProps"],"sources":["TouchableOpacity.tsx"],"sourcesContent":["import {\n  Animated,\n  Easing,\n  StyleSheet,\n  View,\n  TouchableOpacityProps,\n} from 'react-native';\nimport GenericTouchable, {\n  TOUCHABLE_STATE,\n  GenericTouchableProps,\n} from './GenericTouchable';\nimport * as React from 'react';\nimport { Component } from 'react';\n\n/**\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\nexport default class TouchableOpacity extends Component<\n  TouchableOpacityProps & GenericTouchableProps\n> {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.2,\n  };\n\n  // opacity is 1 one by default but could be overwritten\n  getChildStyleOpacityWithDefault = () => {\n    const childStyle = StyleSheet.flatten(this.props.style) || {};\n    return childStyle.opacity == null ? 1 : childStyle.opacity;\n  };\n\n  opacity = new Animated.Value(this.getChildStyleOpacityWithDefault());\n\n  setOpacityTo = (value: number, duration: number) => {\n    Animated.timing(this.opacity, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: false,\n    }).start();\n  };\n\n  onStateChange = (_from: number, to: number) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.setOpacityTo(this.props.activeOpacity!, 0);\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.setOpacityTo(this.getChildStyleOpacityWithDefault(), 150);\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[\n          style,\n          {\n            opacity: (this.opacity as unknown) as number, // TODO: fix this\n          },\n        ]}\n        onStateChange={this.onStateChange}>\n        {this.props.children ? this.props.children : <View />}\n      </GenericTouchable>\n    );\n  }\n}\n"]}