{"version":3,"mappings":"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","names":["getContrastingColor","FAB","small","icon","label","accessibilityLabel","accessibilityState","animated","customColor","color","disabled","onPress","onLongPress","theme","style","visible","uppercase","loading","testID","rest","React","useRef","Animated","Value","visibility","current","scale","animation","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","CrossFadeIcon","Icon","disabledColor","dark","white","black","alpha","rgb","string","StyleSheet","flatten","backgroundColor","colors","accent","foregroundColor","rippleColor","_Surface","opacity","transform","styles","container","pointerEvents","_TouchableRipple","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","touchable","_reactNative","content","extended","standard","source","size","_ActivityIndicator","_Text","selectable","uppercaseLabel","fonts","medium","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","FABWithTheme"],"sources":["FAB.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  AccessibilityState,\n} from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport type { $RemoveChildren } from '../../types';\n\ngetContrastingColor;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = ({\n  small,\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  animated = true,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  loading,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  let foregroundColor;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = getContrastingColor(\n      backgroundColor,\n      white,\n      'rgba(0, 0, 0, .54)'\n    );\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ ...accessibilityState, disabled }}\n        style={styles.touchable}\n        testID={testID}\n      >\n        <View\n          style={[\n            styles.content,\n            label ? styles.extended : small ? styles.small : styles.standard,\n          ]}\n          pointerEvents=\"none\"\n        >\n          {icon && loading !== true ? (\n            <IconComponent source={icon} size={24} color={foregroundColor} />\n          ) : null}\n          {loading ? (\n            <ActivityIndicator size={18} color={foregroundColor} />\n          ) : null}\n          {label ? (\n            <Text\n              selectable={false}\n              style={[\n                styles.label,\n                uppercase && styles.uppercaseLabel,\n                { color: foregroundColor, ...theme.fonts.medium },\n              ]}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n"]}