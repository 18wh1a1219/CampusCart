30585fe5b4ba20ad422e3010e940b8a8
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["children", "title", "titleStyle", "style"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _ListSubheader = _interopRequireDefault(require("./ListSubheader"));

var _theming = require("../../core/theming");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var ListSection = function ListSection(_ref) {
  var children = _ref.children,
      title = _ref.title,
      titleStyle = _ref.titleStyle,
      style = _ref.style,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return React.createElement(_reactNative.View, _extends({}, rest, {
    style: [styles.container, style]
  }), title ? React.createElement(_ListSubheader.default, {
    style: titleStyle
  }, title) : null, children);
};

ListSection.displayName = 'List.Section';

var styles = _reactNative.StyleSheet.create({
  container: {
    marginVertical: 8
  }
});

var _default = (0, _theming.withTheme)(ListSection);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBT0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnREEsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWM7RUFBQSxJQUNsQkMsUUFEa0IsUUFDbEJBLFFBRGtCO0VBQUEsSUFFbEJDLEtBRmtCLFFBRWxCQSxLQUZrQjtFQUFBLElBR2xCQyxVQUhrQixRQUdsQkEsVUFIa0I7RUFBQSxJQUlsQkMsS0FKa0IsUUFJbEJBLEtBSmtCO0VBQUEsSUFLZkMsSUFMZTtFQUFBLE9BT2xCQyxvQkFBQ0MsaUJBQUQsZUFBVUYsSUFBVjtJQUFnQkQsS0FBSyxFQUFFLENBQUNJLE1BQU0sQ0FBQ0MsU0FBUixFQUFtQkwsS0FBbkI7RUFBdkIsSUFDR0YsS0FBSyxHQUFHSSxvQkFBQ0ksc0JBQUQ7SUFBZU4sS0FBSyxFQUFFRDtFQUF0QixHQUFtQ0QsS0FBbkMsQ0FBSCxHQUErRCxJQUR2RSxFQUVHRCxRQUZILENBUGtCO0FBQXBCOztBQWFBRCxXQUFXLENBQUNXLFdBQVpYLEdBQTBCLGNBQTFCQTs7QUFFQSxJQUFNUSxNQUFNLEdBQUdJLHdCQUFXQyxNQUFYRCxDQUFrQjtFQUMvQkgsU0FBUyxFQUFFO0lBQ1RLLGNBQWMsRUFBRTtFQURQO0FBRG9CLENBQWxCRixDQUFmOztlQU1lLHdCQUFVWixXQUFWIiwibmFtZXMiOlsiTGlzdFNlY3Rpb24iLCJjaGlsZHJlbiIsInRpdGxlIiwidGl0bGVTdHlsZSIsInN0eWxlIiwicmVzdCIsIlJlYWN0IiwiX3JlYWN0TmF0aXZlIiwic3R5bGVzIiwiY29udGFpbmVyIiwiX0xpc3RTdWJoZWFkZXIiLCJkaXNwbGF5TmFtZSIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJtYXJnaW5WZXJ0aWNhbCJdLCJzb3VyY2VzIjpbIkxpc3RTZWN0aW9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBWaWV3LFxuICBWaWV3U3R5bGUsXG4gIFN0eWxlU2hlZXQsXG4gIFN0eWxlUHJvcCxcbiAgVGV4dFN0eWxlLFxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IExpc3RTdWJoZWFkZXIgZnJvbSAnLi9MaXN0U3ViaGVhZGVyJztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uLy4uL2NvcmUvdGhlbWluZyc7XG5cbnR5cGUgUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhSZWY8dHlwZW9mIFZpZXc+ICYge1xuICAvKipcbiAgICogVGl0bGUgdGV4dCBmb3IgdGhlIHNlY3Rpb24uXG4gICAqL1xuICB0aXRsZT86IHN0cmluZztcbiAgLyoqXG4gICAqIENvbnRlbnQgb2YgdGhlIHNlY3Rpb24uXG4gICAqL1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICB0aGVtZTogUmVhY3ROYXRpdmVQYXBlci5UaGVtZTtcbiAgLyoqXG4gICAqIFN0eWxlIHRoYXQgaXMgcGFzc2VkIHRvIFRpdGxlIGVsZW1lbnQuXG4gICAqL1xuICB0aXRsZVN0eWxlPzogU3R5bGVQcm9wPFRleHRTdHlsZT47XG4gIHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG59O1xuXG4vKipcbiAqIEEgY29tcG9uZW50IHVzZWQgdG8gZ3JvdXAgbGlzdCBpdGVtcy5cbiAqXG4gKiA8ZGl2IGNsYXNzPVwic2NyZWVuc2hvdHNcIj5cbiAqICAgPGltZyBzcmM9XCJzY3JlZW5zaG90cy9saXN0LXNlY3Rpb24ucG5nXCIgLz5cbiAqIDwvZGl2PlxuICpcbiAqICMjIFVzYWdlXG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuICogaW1wb3J0IHsgTGlzdCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiAoXG4gKiAgIDxMaXN0LlNlY3Rpb24+XG4gKiAgICAgPExpc3QuU3ViaGVhZGVyPlNvbWUgdGl0bGU8L0xpc3QuU3ViaGVhZGVyPlxuICogICAgIDxMaXN0Lkl0ZW0gdGl0bGU9XCJGaXJzdCBJdGVtXCIgbGVmdD17KCkgPT4gPExpc3QuSWNvbiBpY29uPVwiZm9sZGVyXCIgLz59IC8+XG4gKiAgICAgPExpc3QuSXRlbVxuICogICAgICAgdGl0bGU9XCJTZWNvbmQgSXRlbVwiXG4gKiAgICAgICBsZWZ0PXsoKSA9PiA8TGlzdC5JY29uIGNvbG9yPVwiIzAwMFwiIGljb249XCJmb2xkZXJcIiAvPn1cbiAqICAgICAvPlxuICogICA8L0xpc3QuU2VjdGlvbj5cbiAqICk7XG4gKlxuICogZXhwb3J0IGRlZmF1bHQgTXlDb21wb25lbnQ7XG4gKiBgYGBcbiAqL1xuY29uc3QgTGlzdFNlY3Rpb24gPSAoe1xuICBjaGlsZHJlbixcbiAgdGl0bGUsXG4gIHRpdGxlU3R5bGUsXG4gIHN0eWxlLFxuICAuLi5yZXN0XG59OiBQcm9wcykgPT4gKFxuICA8VmlldyB7Li4ucmVzdH0gc3R5bGU9e1tzdHlsZXMuY29udGFpbmVyLCBzdHlsZV19PlxuICAgIHt0aXRsZSA/IDxMaXN0U3ViaGVhZGVyIHN0eWxlPXt0aXRsZVN0eWxlfT57dGl0bGV9PC9MaXN0U3ViaGVhZGVyPiA6IG51bGx9XG4gICAge2NoaWxkcmVufVxuICA8L1ZpZXc+XG4pO1xuXG5MaXN0U2VjdGlvbi5kaXNwbGF5TmFtZSA9ICdMaXN0LlNlY3Rpb24nO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIG1hcmdpblZlcnRpY2FsOiA4LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShMaXN0U2VjdGlvbik7XG4iXX0=