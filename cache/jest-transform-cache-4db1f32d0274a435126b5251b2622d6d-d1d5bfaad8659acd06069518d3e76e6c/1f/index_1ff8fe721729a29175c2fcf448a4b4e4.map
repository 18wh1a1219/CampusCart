{"version":3,"mappings":"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","names":["STEP_STATUS","CURRENT","FINISHED","UNFINISHED","defaultStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","separatorStrokeUnfinishedWidth","separatorStrokeFinishedWidth","currentStepStrokeWidth","stepStrokeWidth","stepStrokeCurrentColor","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","labelAlign","currentStepLabelColor","StepIndicator","currentPosition","stepCount","direction","customStyles","customStylesFromProps","labels","onPress","renderCustomStepIndicator","renderStepIndicator","renderLabel","React","useState","width","setWidth","height","setHeight","progressBarSize","setProgressBarSize","setCustomStyles","progressAnim","useRef","Animated","Value","current","sizeAnim","staleSizeAnim","borderRadiusAnim","stepPressed","position","effectCustomStyles","useEffect","effectCurrentPosition","onCurrentPositionChanged","renderProgressBarBackground","progressBarBackgroundStyle","backgroundColor","left","top","bottom","right","_react","_reactNative","onLayout","event","nativeEvent","layout","style","renderProgressBar","progressBarStyle","View","steps","push","key","styles","stepContainer","flexDirection","renderStep","stepIndicatorContainer","renderStepLabels","length","labelViews","map","label","index","selectedStepLabelStyle","color","stepLabelItem","stepStatus","getStepStatus","stepLabel","fontSize","fontFamily","labelFontFamily","stepLabelsContainer","paddingHorizontal","paddingVertical","alignItems","stepStyle","indicatorLabelStyle","borderWidth","borderColor","borderRadius","overflow","step","stepPosition","animateToPosition","setValue","sequence","timing","toValue","isNaN","duration","useNativeDriver","parallel","start","container","flex","Fragment","StyleSheet","create","justifyContent","zIndex","textAlign","fontWeight","memo"],"sources":["index.tsx"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { StepIndicatorProps } from './types';\n\nconst STEP_STATUS = {\n  CURRENT: 'current',\n  FINISHED: 'finished',\n  UNFINISHED: 'unfinished',\n};\n\ninterface DefaultStepIndicatorStyles {\n  stepIndicatorSize: number;\n  currentStepIndicatorSize: number;\n  separatorStrokeWidth: number;\n  separatorStrokeUnfinishedWidth: number;\n  separatorStrokeFinishedWidth: number;\n  currentStepStrokeWidth: number;\n  stepStrokeWidth: number;\n  stepStrokeCurrentColor: string;\n  stepStrokeFinishedColor: string;\n  stepStrokeUnFinishedColor: string;\n  separatorFinishedColor: string;\n  separatorUnFinishedColor: string;\n  stepIndicatorFinishedColor: string;\n  stepIndicatorUnFinishedColor: string;\n  stepIndicatorCurrentColor: string;\n  stepIndicatorLabelFontSize: number;\n  currentStepIndicatorLabelFontSize: number;\n  stepIndicatorLabelCurrentColor: string;\n  stepIndicatorLabelFinishedColor: string;\n  stepIndicatorLabelUnFinishedColor: string;\n  labelColor: string;\n  labelSize: number;\n  labelAlign:\n    | 'center'\n    | 'flex-start'\n    | 'flex-end'\n    | 'stretch'\n    | 'baseline'\n    | undefined;\n  currentStepLabelColor: string;\n  labelFontFamily?: string;\n}\n\nconst defaultStyles: DefaultStepIndicatorStyles = {\n  stepIndicatorSize: 30,\n  currentStepIndicatorSize: 40,\n  separatorStrokeWidth: 3,\n  separatorStrokeUnfinishedWidth: 0,\n  separatorStrokeFinishedWidth: 0,\n  currentStepStrokeWidth: 5,\n  stepStrokeWidth: 0,\n  stepStrokeCurrentColor: '#4aae4f',\n  stepStrokeFinishedColor: '#4aae4f',\n  stepStrokeUnFinishedColor: '#4aae4f',\n  separatorFinishedColor: '#4aae4f',\n  separatorUnFinishedColor: '#a4d4a5',\n  stepIndicatorFinishedColor: '#4aae4f',\n  stepIndicatorUnFinishedColor: '#a4d4a5',\n  stepIndicatorCurrentColor: '#ffffff',\n  stepIndicatorLabelFontSize: 15,\n  currentStepIndicatorLabelFontSize: 15,\n  stepIndicatorLabelCurrentColor: '#000000',\n  stepIndicatorLabelFinishedColor: '#ffffff',\n  stepIndicatorLabelUnFinishedColor: 'rgba(255,255,255,0.5)',\n  labelColor: '#000000',\n  labelSize: 13,\n  labelAlign: 'center',\n  currentStepLabelColor: '#4aae4f',\n};\n\nconst StepIndicator = ({\n  currentPosition = 0,\n  stepCount = 5,\n  direction = 'horizontal',\n  customStyles: customStylesFromProps = defaultStyles,\n  labels = [],\n  onPress,\n  renderStepIndicator: renderCustomStepIndicator,\n  renderLabel,\n}: StepIndicatorProps) => {\n  const [width, setWidth] = React.useState<number>(0);\n  const [height, setHeight] = React.useState<number>(0);\n  const [progressBarSize, setProgressBarSize] = React.useState<number>(0);\n  const [customStyles, setCustomStyles] = React.useState<\n    DefaultStepIndicatorStyles\n  >({\n    ...defaultStyles,\n    ...customStylesFromProps,\n  });\n\n  const progressAnim = React.useRef(new Animated.Value(0)).current;\n  const sizeAnim = React.useRef(\n    new Animated.Value(customStyles.stepIndicatorSize)\n  ).current;\n  const staleSizeAnim = React.useRef(\n    new Animated.Value(customStyles.stepIndicatorSize)\n  ).current;\n  const borderRadiusAnim = React.useRef(\n    new Animated.Value(customStyles.stepIndicatorSize / 2)\n  ).current;\n\n  const stepPressed = (position: number) => {\n    if (onPress) {\n      onPress(position);\n    }\n  };\n\n  const effectCustomStyles = () => {\n    setCustomStyles({ ...customStyles, ...customStylesFromProps });\n  };\n  React.useEffect(effectCustomStyles, [customStylesFromProps]);\n\n  const effectCurrentPosition = () => {\n    onCurrentPositionChanged(currentPosition);\n  };\n  React.useEffect(effectCurrentPosition, [currentPosition, progressBarSize]);\n\n  const renderProgressBarBackground = () => {\n    let progressBarBackgroundStyle: ViewStyle = {\n      backgroundColor: customStyles.separatorUnFinishedColor,\n      position: 'absolute',\n    };\n    if (direction === 'vertical') {\n      progressBarBackgroundStyle = {\n        ...progressBarBackgroundStyle,\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width:\n          customStyles.separatorStrokeUnfinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeUnfinishedWidth,\n      };\n    } else {\n      progressBarBackgroundStyle = {\n        ...progressBarBackgroundStyle,\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height:\n          customStyles.separatorStrokeUnfinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeUnfinishedWidth,\n      };\n    }\n    return (\n      <View\n        onLayout={(event) => {\n          if (direction === 'vertical') {\n            setProgressBarSize(event.nativeEvent.layout.height);\n          } else {\n            setProgressBarSize(event.nativeEvent.layout.width);\n          }\n        }}\n        style={progressBarBackgroundStyle}\n      />\n    );\n  };\n\n  const renderProgressBar = () => {\n    let progressBarStyle: any = {\n      backgroundColor: customStyles.separatorFinishedColor,\n      position: 'absolute',\n    };\n    if (direction === 'vertical') {\n      progressBarStyle = {\n        ...progressBarStyle,\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width:\n          customStyles.separatorStrokeFinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeFinishedWidth,\n        height: progressAnim,\n      };\n    } else {\n      progressBarStyle = {\n        ...progressBarStyle,\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height:\n          customStyles.separatorStrokeFinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeFinishedWidth,\n        width: progressAnim,\n      };\n    }\n    return <Animated.View style={progressBarStyle} />;\n  };\n\n  const renderStepIndicator = () => {\n    let steps = [];\n    for (let position = 0; position < stepCount; position++) {\n      steps.push(\n        <TouchableWithoutFeedback\n          key={position}\n          onPress={() => stepPressed(position)}\n        >\n          <View\n            style={[\n              styles.stepContainer,\n              direction === 'vertical'\n                ? { flexDirection: 'column' }\n                : { flexDirection: 'row' },\n            ]}\n          >\n            {renderStep(position)}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }\n    return (\n      <View\n        onLayout={(event) => {\n          setWidth(event.nativeEvent.layout.width);\n          setHeight(event.nativeEvent.layout.height);\n        }}\n        style={[\n          styles.stepIndicatorContainer,\n          direction === 'vertical'\n            ? {\n                flexDirection: 'column',\n                width: customStyles.currentStepIndicatorSize,\n              }\n            : {\n                flexDirection: 'row',\n                height: customStyles.currentStepIndicatorSize,\n              },\n        ]}\n      >\n        {steps}\n      </View>\n    );\n  };\n\n  const renderStepLabels = () => {\n    if (!labels || labels.length === 0) {\n      return;\n    }\n    var labelViews = labels.map((label, index) => {\n      const selectedStepLabelStyle =\n        index === currentPosition\n          ? { color: customStyles.currentStepLabelColor }\n          : { color: customStyles.labelColor };\n      return (\n        <TouchableWithoutFeedback\n          style={styles.stepLabelItem}\n          key={index}\n          onPress={() => stepPressed(index)}\n        >\n          <View style={styles.stepLabelItem}>\n            {renderLabel ? (\n              renderLabel({\n                position: index,\n                stepStatus: getStepStatus(index),\n                label,\n                currentPosition,\n              })\n            ) : (\n              <Text\n                style={[\n                  styles.stepLabel,\n                  selectedStepLabelStyle,\n                  {\n                    fontSize: customStyles.labelSize,\n                    fontFamily: customStyles.labelFontFamily,\n                  },\n                ]}\n              >\n                {label}\n              </Text>\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    });\n\n    return (\n      <View\n        style={[\n          styles.stepLabelsContainer,\n          direction === 'vertical'\n            ? { flexDirection: 'column', paddingHorizontal: 4 }\n            : { flexDirection: 'row', paddingVertical: 4 },\n          { alignItems: customStyles.labelAlign },\n        ]}\n      >\n        {labelViews}\n      </View>\n    );\n  };\n\n  const renderStep = (position: number) => {\n    let stepStyle;\n    let indicatorLabelStyle: TextStyle = {};\n    switch (getStepStatus(position)) {\n      case STEP_STATUS.CURRENT: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorCurrentColor,\n          borderWidth: customStyles.currentStepStrokeWidth,\n          borderColor: customStyles.stepStrokeCurrentColor,\n          height: sizeAnim,\n          width: sizeAnim,\n          borderRadius: borderRadiusAnim,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.currentStepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelCurrentColor,\n        };\n\n        break;\n      }\n      case STEP_STATUS.FINISHED: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorFinishedColor,\n          borderWidth: customStyles.stepStrokeWidth,\n          borderColor: customStyles.stepStrokeFinishedColor,\n          height: staleSizeAnim,\n          width: staleSizeAnim,\n          borderRadius: customStyles.stepIndicatorSize / 2,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.stepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelFinishedColor,\n        };\n        break;\n      }\n\n      case STEP_STATUS.UNFINISHED: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorUnFinishedColor,\n          borderWidth: customStyles.stepStrokeWidth,\n          borderColor: customStyles.stepStrokeUnFinishedColor,\n          height: staleSizeAnim,\n          width: staleSizeAnim,\n          borderRadius: customStyles.stepIndicatorSize / 2,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.stepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelUnFinishedColor,\n        };\n        break;\n      }\n      default:\n    }\n\n    return (\n      <Animated.View key={'step-indicator'} style={[styles.step, stepStyle]}>\n        {renderCustomStepIndicator ? (\n          renderCustomStepIndicator({\n            position,\n            stepStatus: getStepStatus(position),\n          })\n        ) : (\n          <Text style={indicatorLabelStyle}>{`${position + 1}`}</Text>\n        )}\n      </Animated.View>\n    );\n  };\n\n  const getStepStatus = (stepPosition: number) => {\n    if (stepPosition === currentPosition) {\n      return STEP_STATUS.CURRENT;\n    } else if (stepPosition < currentPosition) {\n      return STEP_STATUS.FINISHED;\n    } else {\n      return STEP_STATUS.UNFINISHED;\n    }\n  };\n\n  const onCurrentPositionChanged = (position: number) => {\n    if (position > stepCount - 1) {\n      position = stepCount - 1;\n    }\n    const animateToPosition = (progressBarSize / (stepCount - 1)) * position;\n    sizeAnim.setValue(customStyles.stepIndicatorSize);\n    staleSizeAnim.setValue(customStyles.stepIndicatorSize);\n    borderRadiusAnim.setValue(customStyles.stepIndicatorSize / 2);\n    Animated.sequence([\n      Animated.timing(progressAnim, {\n        toValue: isNaN(animateToPosition) ? 0 : animateToPosition,\n        duration: 200,\n        useNativeDriver: false,\n      }),\n      Animated.parallel([\n        Animated.timing(sizeAnim, {\n          toValue: customStyles.currentStepIndicatorSize,\n          duration: 100,\n          useNativeDriver: false,\n        }),\n        Animated.timing(borderRadiusAnim, {\n          toValue: customStyles.currentStepIndicatorSize / 2,\n          duration: 100,\n          useNativeDriver: false,\n        }),\n      ]),\n    ]).start();\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        direction === 'vertical'\n          ? { flexDirection: 'row', flex: 1 }\n          : { flexDirection: 'column' },\n      ]}\n    >\n      {width !== 0 && (\n        <React.Fragment>\n          {renderProgressBarBackground()}\n          {renderProgressBar()}\n        </React.Fragment>\n      )}\n      {renderStepIndicator()}\n      {labels && renderStepLabels()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgba(1,0,0,0)',\n  },\n  stepIndicatorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    backgroundColor: 'rgba(1,0,0,0)',\n  },\n  stepLabelsContainer: {\n    justifyContent: 'space-around',\n  },\n  step: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n  },\n  stepContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  stepLabel: {\n    fontSize: 12,\n    textAlign: 'center',\n    fontWeight: '500',\n  },\n  stepLabelItem: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(StepIndicator);\n"]}