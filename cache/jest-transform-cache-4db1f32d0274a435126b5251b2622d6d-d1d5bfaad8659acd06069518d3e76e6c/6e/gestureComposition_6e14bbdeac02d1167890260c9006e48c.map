{"version":3,"mappings":"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","names":["extendRelation","currentRelation","extendWith","undefined","ComposedGesture","constructor","_defineProperty","gestures","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","BaseGesture","newConfig","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","Gesture","SimultaneousGesture","simultaneousArray","concat","ExclusiveGesture","gestureArrays","map","i","length"],"sources":["gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    const simultaneousArray = this.gestures\n      .flatMap((gesture) => gesture.toGestureArray())\n      .concat(this.simultaneousGestures);\n\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        simultaneousArray,\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"]}