1b0b3696e3997d9da30bff1a93da2237
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExclusiveGesture = exports.SimultaneousGesture = exports.ComposedGesture = void 0;

var _gesture = require("./gesture");

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function extendRelation(currentRelation, extendWith) {
  if (currentRelation === undefined) {
    return (0, _toConsumableArray2.default)(extendWith);
  } else {
    return [].concat((0, _toConsumableArray2.default)(currentRelation), (0, _toConsumableArray2.default)(extendWith));
  }
}

var ComposedGesture = function (_gesture$Gesture) {
  (0, _inherits2.default)(ComposedGesture, _gesture$Gesture);

  var _super = _createSuper(ComposedGesture);

  function ComposedGesture() {
    var _this;

    (0, _classCallCheck2.default)(this, ComposedGesture);
    _this = _super.call(this);

    _defineProperty((0, _assertThisInitialized2.default)(_this), "gestures", []);

    _defineProperty((0, _assertThisInitialized2.default)(_this), "simultaneousGestures", []);

    _defineProperty((0, _assertThisInitialized2.default)(_this), "requireGesturesToFail", []);

    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {
      gestures[_key] = arguments[_key];
    }

    _this.gestures = gestures;
    return _this;
  }

  (0, _createClass2.default)(ComposedGesture, [{
    key: "prepareSingleGesture",
    value: function prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {
      if (gesture instanceof _gesture.BaseGesture) {
        var newConfig = (0, _extends2.default)({}, gesture.config);
        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);
        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);
        gesture.config = newConfig;
      } else if (gesture instanceof ComposedGesture) {
        gesture.simultaneousGestures = simultaneousGestures;
        gesture.requireGesturesToFail = requireGesturesToFail;
        gesture.prepare();
      }
    }
  }, {
    key: "prepare",
    value: function prepare() {
      for (var _iterator = _createForOfIteratorHelperLoose(this.gestures), _step; !(_step = _iterator()).done;) {
        var gesture = _step.value;
        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);
      }
    }
  }, {
    key: "initialize",
    value: function initialize() {
      for (var _iterator2 = _createForOfIteratorHelperLoose(this.gestures), _step2; !(_step2 = _iterator2()).done;) {
        var gesture = _step2.value;
        gesture.initialize();
      }
    }
  }, {
    key: "toGestureArray",
    value: function toGestureArray() {
      return this.gestures.flatMap(function (gesture) {
        return gesture.toGestureArray();
      });
    }
  }]);
  return ComposedGesture;
}(_gesture.Gesture);

exports.ComposedGesture = ComposedGesture;

var SimultaneousGesture = function (_ComposedGesture) {
  (0, _inherits2.default)(SimultaneousGesture, _ComposedGesture);

  var _super2 = _createSuper(SimultaneousGesture);

  function SimultaneousGesture() {
    (0, _classCallCheck2.default)(this, SimultaneousGesture);
    return _super2.apply(this, arguments);
  }

  (0, _createClass2.default)(SimultaneousGesture, [{
    key: "prepare",
    value: function prepare() {
      var simultaneousArray = this.gestures.flatMap(function (gesture) {
        return gesture.toGestureArray();
      }).concat(this.simultaneousGestures);

      for (var _iterator3 = _createForOfIteratorHelperLoose(this.gestures), _step3; !(_step3 = _iterator3()).done;) {
        var gesture = _step3.value;
        this.prepareSingleGesture(gesture, simultaneousArray, this.requireGesturesToFail);
      }
    }
  }]);
  return SimultaneousGesture;
}(ComposedGesture);

exports.SimultaneousGesture = SimultaneousGesture;

var ExclusiveGesture = function (_ComposedGesture2) {
  (0, _inherits2.default)(ExclusiveGesture, _ComposedGesture2);

  var _super3 = _createSuper(ExclusiveGesture);

  function ExclusiveGesture() {
    (0, _classCallCheck2.default)(this, ExclusiveGesture);
    return _super3.apply(this, arguments);
  }

  (0, _createClass2.default)(ExclusiveGesture, [{
    key: "prepare",
    value: function prepare() {
      var gestureArrays = this.gestures.map(function (gesture) {
        return gesture.toGestureArray();
      });
      var requireToFail = [];

      for (var i = 0; i < this.gestures.length; i++) {
        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));
        requireToFail = requireToFail.concat(gestureArrays[i]);
      }
    }
  }]);
  return ExclusiveGesture;
}(ComposedGesture);

exports.ExclusiveGesture = ExclusiveGesture;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixNQUFsQyxFQUEwQ0QsQ0FBQyxFQUEzQyxFQUErQztRQUM3QyxLQUFLcEIsb0JBQUwsQ0FDRSxLQUFLRCxRQUFMLENBQWNxQixDQUFkLENBREYsRUFFRSxLQUFLbEIsb0JBRlAsRUFHRSxLQUFLQyxxQkFBTCxDQUEyQmEsTUFBM0IsQ0FBa0NSLGFBQWxDLENBSEY7UUFNQUEsYUFBYSxHQUFHQSxhQUFhLENBQUNRLE1BQWRSLENBQXFCVSxhQUFhLENBQUNFLENBQUQsQ0FBbENaLENBQWhCQTtNQUNEO0lBQ0Y7OztFQWpCbUNaLGUiLCJuYW1lcyI6WyJleHRlbmRSZWxhdGlvbiIsImN1cnJlbnRSZWxhdGlvbiIsImV4dGVuZFdpdGgiLCJ1bmRlZmluZWQiLCJDb21wb3NlZEdlc3R1cmUiLCJjb25zdHJ1Y3RvciIsIl9kZWZpbmVQcm9wZXJ0eSIsImdlc3R1cmVzIiwicHJlcGFyZVNpbmdsZUdlc3R1cmUiLCJnZXN0dXJlIiwic2ltdWx0YW5lb3VzR2VzdHVyZXMiLCJyZXF1aXJlR2VzdHVyZXNUb0ZhaWwiLCJCYXNlR2VzdHVyZSIsIm5ld0NvbmZpZyIsImNvbmZpZyIsInNpbXVsdGFuZW91c1dpdGgiLCJyZXF1aXJlVG9GYWlsIiwicHJlcGFyZSIsImluaXRpYWxpemUiLCJ0b0dlc3R1cmVBcnJheSIsImZsYXRNYXAiLCJHZXN0dXJlIiwiU2ltdWx0YW5lb3VzR2VzdHVyZSIsInNpbXVsdGFuZW91c0FycmF5IiwiY29uY2F0IiwiRXhjbHVzaXZlR2VzdHVyZSIsImdlc3R1cmVBcnJheXMiLCJtYXAiLCJpIiwibGVuZ3RoIl0sInNvdXJjZXMiOlsiZ2VzdHVyZUNvbXBvc2l0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VHZXN0dXJlLCBHZXN0dXJlLCBHZXN0dXJlUmVmLCBHZXN0dXJlVHlwZSB9IGZyb20gJy4vZ2VzdHVyZSc7XG5cbmZ1bmN0aW9uIGV4dGVuZFJlbGF0aW9uKFxuICBjdXJyZW50UmVsYXRpb246IEdlc3R1cmVSZWZbXSB8IHVuZGVmaW5lZCxcbiAgZXh0ZW5kV2l0aDogR2VzdHVyZVR5cGVbXVxuKSB7XG4gIGlmIChjdXJyZW50UmVsYXRpb24gPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBbLi4uZXh0ZW5kV2l0aF07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFsuLi5jdXJyZW50UmVsYXRpb24sIC4uLmV4dGVuZFdpdGhdO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDb21wb3NlZEdlc3R1cmUgZXh0ZW5kcyBHZXN0dXJlIHtcbiAgcHJvdGVjdGVkIGdlc3R1cmVzOiBHZXN0dXJlW10gPSBbXTtcbiAgcHJvdGVjdGVkIHNpbXVsdGFuZW91c0dlc3R1cmVzOiBHZXN0dXJlVHlwZVtdID0gW107XG4gIHByb3RlY3RlZCByZXF1aXJlR2VzdHVyZXNUb0ZhaWw6IEdlc3R1cmVUeXBlW10gPSBbXTtcblxuICBjb25zdHJ1Y3RvciguLi5nZXN0dXJlczogR2VzdHVyZVtdKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmdlc3R1cmVzID0gZ2VzdHVyZXM7XG4gIH1cblxuICBwcm90ZWN0ZWQgcHJlcGFyZVNpbmdsZUdlc3R1cmUoXG4gICAgZ2VzdHVyZTogR2VzdHVyZSxcbiAgICBzaW11bHRhbmVvdXNHZXN0dXJlczogR2VzdHVyZVR5cGVbXSxcbiAgICByZXF1aXJlR2VzdHVyZXNUb0ZhaWw6IEdlc3R1cmVUeXBlW11cbiAgKSB7XG4gICAgaWYgKGdlc3R1cmUgaW5zdGFuY2VvZiBCYXNlR2VzdHVyZSkge1xuICAgICAgY29uc3QgbmV3Q29uZmlnID0geyAuLi5nZXN0dXJlLmNvbmZpZyB9O1xuXG4gICAgICBuZXdDb25maWcuc2ltdWx0YW5lb3VzV2l0aCA9IGV4dGVuZFJlbGF0aW9uKFxuICAgICAgICBuZXdDb25maWcuc2ltdWx0YW5lb3VzV2l0aCxcbiAgICAgICAgc2ltdWx0YW5lb3VzR2VzdHVyZXNcbiAgICAgICk7XG4gICAgICBuZXdDb25maWcucmVxdWlyZVRvRmFpbCA9IGV4dGVuZFJlbGF0aW9uKFxuICAgICAgICBuZXdDb25maWcucmVxdWlyZVRvRmFpbCxcbiAgICAgICAgcmVxdWlyZUdlc3R1cmVzVG9GYWlsXG4gICAgICApO1xuXG4gICAgICBnZXN0dXJlLmNvbmZpZyA9IG5ld0NvbmZpZztcbiAgICB9IGVsc2UgaWYgKGdlc3R1cmUgaW5zdGFuY2VvZiBDb21wb3NlZEdlc3R1cmUpIHtcbiAgICAgIGdlc3R1cmUuc2ltdWx0YW5lb3VzR2VzdHVyZXMgPSBzaW11bHRhbmVvdXNHZXN0dXJlcztcbiAgICAgIGdlc3R1cmUucmVxdWlyZUdlc3R1cmVzVG9GYWlsID0gcmVxdWlyZUdlc3R1cmVzVG9GYWlsO1xuICAgICAgZ2VzdHVyZS5wcmVwYXJlKCk7XG4gICAgfVxuICB9XG5cbiAgcHJlcGFyZSgpIHtcbiAgICBmb3IgKGNvbnN0IGdlc3R1cmUgb2YgdGhpcy5nZXN0dXJlcykge1xuICAgICAgdGhpcy5wcmVwYXJlU2luZ2xlR2VzdHVyZShcbiAgICAgICAgZ2VzdHVyZSxcbiAgICAgICAgdGhpcy5zaW11bHRhbmVvdXNHZXN0dXJlcyxcbiAgICAgICAgdGhpcy5yZXF1aXJlR2VzdHVyZXNUb0ZhaWxcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgaW5pdGlhbGl6ZSgpIHtcbiAgICBmb3IgKGNvbnN0IGdlc3R1cmUgb2YgdGhpcy5nZXN0dXJlcykge1xuICAgICAgZ2VzdHVyZS5pbml0aWFsaXplKCk7XG4gICAgfVxuICB9XG5cbiAgdG9HZXN0dXJlQXJyYXkoKTogR2VzdHVyZVR5cGVbXSB7XG4gICAgcmV0dXJuIHRoaXMuZ2VzdHVyZXMuZmxhdE1hcCgoZ2VzdHVyZSkgPT4gZ2VzdHVyZS50b0dlc3R1cmVBcnJheSgpKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2ltdWx0YW5lb3VzR2VzdHVyZSBleHRlbmRzIENvbXBvc2VkR2VzdHVyZSB7XG4gIHByZXBhcmUoKSB7XG4gICAgY29uc3Qgc2ltdWx0YW5lb3VzQXJyYXkgPSB0aGlzLmdlc3R1cmVzXG4gICAgICAuZmxhdE1hcCgoZ2VzdHVyZSkgPT4gZ2VzdHVyZS50b0dlc3R1cmVBcnJheSgpKVxuICAgICAgLmNvbmNhdCh0aGlzLnNpbXVsdGFuZW91c0dlc3R1cmVzKTtcblxuICAgIGZvciAoY29uc3QgZ2VzdHVyZSBvZiB0aGlzLmdlc3R1cmVzKSB7XG4gICAgICB0aGlzLnByZXBhcmVTaW5nbGVHZXN0dXJlKFxuICAgICAgICBnZXN0dXJlLFxuICAgICAgICBzaW11bHRhbmVvdXNBcnJheSxcbiAgICAgICAgdGhpcy5yZXF1aXJlR2VzdHVyZXNUb0ZhaWxcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBFeGNsdXNpdmVHZXN0dXJlIGV4dGVuZHMgQ29tcG9zZWRHZXN0dXJlIHtcbiAgcHJlcGFyZSgpIHtcbiAgICBjb25zdCBnZXN0dXJlQXJyYXlzID0gdGhpcy5nZXN0dXJlcy5tYXAoKGdlc3R1cmUpID0+XG4gICAgICBnZXN0dXJlLnRvR2VzdHVyZUFycmF5KClcbiAgICApO1xuXG4gICAgbGV0IHJlcXVpcmVUb0ZhaWw6IEdlc3R1cmVUeXBlW10gPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5nZXN0dXJlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5wcmVwYXJlU2luZ2xlR2VzdHVyZShcbiAgICAgICAgdGhpcy5nZXN0dXJlc1tpXSxcbiAgICAgICAgdGhpcy5zaW11bHRhbmVvdXNHZXN0dXJlcyxcbiAgICAgICAgdGhpcy5yZXF1aXJlR2VzdHVyZXNUb0ZhaWwuY29uY2F0KHJlcXVpcmVUb0ZhaWwpXG4gICAgICApO1xuXG4gICAgICByZXF1aXJlVG9GYWlsID0gcmVxdWlyZVRvRmFpbC5jb25jYXQoZ2VzdHVyZUFycmF5c1tpXSk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB0eXBlIENvbXBvc2VkR2VzdHVyZVR5cGUgPSBJbnN0YW5jZVR5cGU8dHlwZW9mIENvbXBvc2VkR2VzdHVyZT47XG5leHBvcnQgdHlwZSBSYWNlR2VzdHVyZVR5cGUgPSBDb21wb3NlZEdlc3R1cmVUeXBlO1xuZXhwb3J0IHR5cGUgU2ltdWx0YW5lb3VzR2VzdHVyZVR5cGUgPSBJbnN0YW5jZVR5cGU8dHlwZW9mIFNpbXVsdGFuZW91c0dlc3R1cmU+O1xuZXhwb3J0IHR5cGUgRXhjbHVzaXZlR2VzdHVyZVR5cGUgPSBJbnN0YW5jZVR5cGU8dHlwZW9mIEV4Y2x1c2l2ZUdlc3R1cmU+O1xuIl19