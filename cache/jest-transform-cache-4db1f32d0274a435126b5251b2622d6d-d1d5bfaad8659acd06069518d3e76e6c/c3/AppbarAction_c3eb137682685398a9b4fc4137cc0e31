07b71ae29ea96fb4e5a0b450e88f0239
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["size", "color", "icon", "disabled", "onPress", "accessibilityLabel"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AppbarAction = void 0;

var React = _interopRequireWildcard(require("react"));

var _color = _interopRequireDefault(require("color"));

var _colors = require("../../styles/colors");

var _IconButton = _interopRequireDefault(require("../IconButton"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var AppbarAction = function AppbarAction(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 24 : _ref$size,
      _ref$color = _ref.color,
      iconColor = _ref$color === void 0 ? (0, _color.default)(_colors.black).alpha(0.54).rgb().string() : _ref$color,
      icon = _ref.icon,
      disabled = _ref.disabled,
      onPress = _ref.onPress,
      accessibilityLabel = _ref.accessibilityLabel,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return React.createElement(_IconButton.default, _extends({
    size: size,
    onPress: onPress,
    color: iconColor,
    icon: icon,
    disabled: disabled,
    accessibilityLabel: accessibilityLabel,
    animated: true
  }, rest));
};

exports.AppbarAction = AppbarAction;
AppbarAction.displayName = 'Appbar.Action';
var _default = AppbarAction;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBTUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtRUEsSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWU7RUFBQSxxQkFDbkJDLElBRG1CO0VBQUEsSUFDbkJBLElBRG1CLDBCQUNaLEVBRFk7RUFBQSxzQkFFbkJDLEtBRm1CO0VBQUEsSUFFWkMsU0FGWSwyQkFFQSxvQkFBTUMsYUFBTixFQUFhQyxLQUFiLENBQW1CLElBQW5CLEVBQXlCQyxHQUF6QixHQUErQkMsTUFBL0IsRUFGQTtFQUFBLElBR25CQyxJQUhtQixRQUduQkEsSUFIbUI7RUFBQSxJQUluQkMsUUFKbUIsUUFJbkJBLFFBSm1CO0VBQUEsSUFLbkJDLE9BTG1CLFFBS25CQSxPQUxtQjtFQUFBLElBTW5CQyxrQkFObUIsUUFNbkJBLGtCQU5tQjtFQUFBLElBT2hCQyxJQVBnQjtFQUFBLE9BU25CQyxvQkFBQ0MsbUJBQUQ7SUFDRWIsSUFBSSxFQUFFQSxJQURSO0lBRUVTLE9BQU8sRUFBRUEsT0FGWDtJQUdFUixLQUFLLEVBQUVDLFNBSFQ7SUFJRUssSUFBSSxFQUFFQSxJQUpSO0lBS0VDLFFBQVEsRUFBRUEsUUFMWjtJQU1FRSxrQkFBa0IsRUFBRUEsa0JBTnRCO0lBT0VJLFFBQVE7RUFQVixHQVFNSCxJQVJOLEVBVG1CO0FBQXJCOzs7QUFxQkFaLFlBQVksQ0FBQ2dCLFdBQWJoQixHQUEyQixlQUEzQkE7ZUFFZUEiLCJuYW1lcyI6WyJBcHBiYXJBY3Rpb24iLCJzaXplIiwiY29sb3IiLCJpY29uQ29sb3IiLCJibGFjayIsImFscGhhIiwicmdiIiwic3RyaW5nIiwiaWNvbiIsImRpc2FibGVkIiwib25QcmVzcyIsImFjY2Vzc2liaWxpdHlMYWJlbCIsInJlc3QiLCJSZWFjdCIsIl9JY29uQnV0dG9uIiwiYW5pbWF0ZWQiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VzIjpbIkFwcGJhckFjdGlvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNvbG9yIGZyb20gJ2NvbG9yJztcbmltcG9ydCB0eXBlIHtcbiAgU3R5bGVQcm9wLFxuICBWaWV3U3R5bGUsXG4gIFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayxcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IGJsYWNrIH0gZnJvbSAnLi4vLi4vc3R5bGVzL2NvbG9ycyc7XG5pbXBvcnQgSWNvbkJ1dHRvbiBmcm9tICcuLi9JY29uQnV0dG9uJztcbmltcG9ydCB0eXBlIHsgSWNvblNvdXJjZSB9IGZyb20gJy4uL0ljb24nO1xuXG50eXBlIFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBJY29uQnV0dG9uPiAmIHtcbiAgLyoqXG4gICAqICBDdXN0b20gY29sb3IgZm9yIGFjdGlvbiBpY29uLlxuICAgKi9cbiAgY29sb3I/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBOYW1lIG9mIHRoZSBpY29uIHRvIHNob3cuXG4gICAqL1xuICBpY29uOiBJY29uU291cmNlO1xuICAvKipcbiAgICogT3B0aW9uYWwgaWNvbiBzaXplLlxuICAgKi9cbiAgc2l6ZT86IG51bWJlcjtcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGJ1dHRvbiBpcyBkaXNhYmxlZC4gQSBkaXNhYmxlZCBidXR0b24gaXMgZ3JleWVkIG91dCBhbmQgYG9uUHJlc3NgIGlzIG5vdCBjYWxsZWQgb24gdG91Y2guXG4gICAqL1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBBY2Nlc3NpYmlsaXR5IGxhYmVsIGZvciB0aGUgYnV0dG9uLiBUaGlzIGlzIHJlYWQgYnkgdGhlIHNjcmVlbiByZWFkZXIgd2hlbiB0aGUgdXNlciB0YXBzIHRoZSBidXR0b24uXG4gICAqL1xuICBhY2Nlc3NpYmlsaXR5TGFiZWw/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBGdW5jdGlvbiB0byBleGVjdXRlIG9uIHByZXNzLlxuICAgKi9cbiAgb25QcmVzcz86ICgpID0+IHZvaWQ7XG4gIHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG4gIHJlZj86IFJlYWN0LlJlZk9iamVjdDxUb3VjaGFibGVXaXRob3V0RmVlZGJhY2s+O1xufTtcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB1c2VkIHRvIGRpc3BsYXkgYW4gYWN0aW9uIGl0ZW0gaW4gdGhlIGFwcGJhci5cbiAqIDxkaXYgY2xhc3M9XCJzY3JlZW5zaG90c1wiPlxuICogICA8ZmlndXJlPlxuICogICAgIDxpbWcgY2xhc3M9XCJtZWRpdW1cIiBzcmM9XCJzY3JlZW5zaG90cy9hcHBiYXItYWN0aW9uLWFuZHJvaWQucG5nXCIgLz5cbiAqICAgICAgIDxmaWdjYXB0aW9uPkFuZHJvaWQ8L2ZpZ2NhcHRpb24+XG4gKiAgIDwvZmlndXJlPlxuICogPC9kaXY+XG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBjbGFzcz1cIm1lZGl1bVwiIHNyYz1cInNjcmVlbnNob3RzL2FwcGJhci1hY3Rpb24taW9zLnBuZ1wiIC8+XG4gKiAgICAgICA8ZmlnY2FwdGlvbj5pT1M8L2ZpZ2NhcHRpb24+XG4gKiAgIDwvZmlndXJlPlxuICogPC9kaXY+XG4gKlxuICogIyMgVXNhZ2VcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG4gKiBpbXBvcnQgeyBBcHBiYXIgfSBmcm9tICdyZWFjdC1uYXRpdmUtcGFwZXInO1xuICogaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuICpcbiAqIGNvbnN0IE1PUkVfSUNPTiA9IFBsYXRmb3JtLk9TID09PSAnaW9zJyA/ICdkb3RzLWhvcml6b250YWwnIDogJ2RvdHMtdmVydGljYWwnO1xuICpcbiAqIGNvbnN0IE15Q29tcG9uZW50ID0gKCkgPT4gKFxuICogICAgIDxBcHBiYXIuSGVhZGVyPlxuICogICAgICAgIDxBcHBiYXIuQ29udGVudCB0aXRsZT1cIlRpdGxlXCIgc3VidGl0bGU9eydTdWJ0aXRsZSd9IC8+XG4gKiAgICAgICAgIDxBcHBiYXIuQWN0aW9uIGljb249XCJtYWduaWZ5XCIgb25QcmVzcz17KCkgPT4ge319IC8+XG4gKiAgICAgICAgIDxBcHBiYXIuQWN0aW9uIGljb249e01PUkVfSUNPTn0gb25QcmVzcz17KCkgPT4ge319IC8+XG4gKiAgICAgPC9BcHBiYXIuSGVhZGVyPlxuICogKTtcbiAqXG4gKiBleHBvcnQgZGVmYXVsdCBNeUNvbXBvbmVudDtcbiAqIGBgYFxuICovXG5jb25zdCBBcHBiYXJBY3Rpb24gPSAoe1xuICBzaXplID0gMjQsXG4gIGNvbG9yOiBpY29uQ29sb3IgPSBjb2xvcihibGFjaykuYWxwaGEoMC41NCkucmdiKCkuc3RyaW5nKCksXG4gIGljb24sXG4gIGRpc2FibGVkLFxuICBvblByZXNzLFxuICBhY2Nlc3NpYmlsaXR5TGFiZWwsXG4gIC4uLnJlc3Rcbn06IFByb3BzKSA9PiAoXG4gIDxJY29uQnV0dG9uXG4gICAgc2l6ZT17c2l6ZX1cbiAgICBvblByZXNzPXtvblByZXNzfVxuICAgIGNvbG9yPXtpY29uQ29sb3J9XG4gICAgaWNvbj17aWNvbn1cbiAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgYWNjZXNzaWJpbGl0eUxhYmVsPXthY2Nlc3NpYmlsaXR5TGFiZWx9XG4gICAgYW5pbWF0ZWRcbiAgICB7Li4ucmVzdH1cbiAgLz5cbik7XG5cbkFwcGJhckFjdGlvbi5kaXNwbGF5TmFtZSA9ICdBcHBiYXIuQWN0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgQXBwYmFyQWN0aW9uO1xuXG4vLyBAY29tcG9uZW50LWRvY3MgaWdub3JlLW5leHQtbGluZVxuZXhwb3J0IHsgQXBwYmFyQWN0aW9uIH07XG4iXX0=