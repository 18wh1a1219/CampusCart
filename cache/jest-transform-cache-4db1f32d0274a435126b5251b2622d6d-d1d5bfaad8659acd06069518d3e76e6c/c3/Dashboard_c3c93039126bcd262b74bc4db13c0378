61e271ecfdb9234b9fba9514833a4a99
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Dashboard;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativeGestureHandler = require("react-native-gesture-handler");

var _firebase = _interopRequireDefault(require("firebase"));

var _reactNativeSafeAreaContext = require("react-native-safe-area-context");

var _MaterialCommunityIcons = _interopRequireDefault(require("react-native-vector-icons/MaterialCommunityIcons"));

var _bottomTabs = require("@react-navigation/bottom-tabs");

var _AddPost = _interopRequireDefault(require("./AddPost"));

var _Feed = _interopRequireDefault(require("./Feed"));

var _SignIn = _interopRequireDefault(require("./SignIn"));

var _Profile = _interopRequireDefault(require("./Profile"));

var _Messages = _interopRequireDefault(require("./Messages"));

var _Cart = _interopRequireDefault(require("./Cart"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Dashboard(_ref) {
  var navigation = _ref.navigation;

  var _useState = (0, _react.useState)(''),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      productName = _useState2[0],
      setProductName = _useState2[1];

  var _useState3 = (0, _react.useState)(''),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      desc = _useState4[0],
      setDesc = _useState4[1];

  var _useState5 = (0, _react.useState)(''),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      price = _useState6[0],
      setPrice = _useState6[1];

  var _useState7 = (0, _react.useState)(''),
      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
      image = _useState8[0],
      setImage = _useState8[1];

  var _useState9 = (0, _react.useState)(undefined),
      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
      imageUrl = _useState10[0],
      setImageUrl = _useState10[1];

  var Tab = (0, _bottomTabs.createBottomTabNavigator)();
  return _react.default.createElement(Tab.Navigator, {
    style: styles.background
  }, _react.default.createElement(Tab.Screen, {
    name: "Campus cart",
    component: _Feed.default,
    options: {
      tabBarIcon: function tabBarIcon(_ref2) {
        var color = _ref2.color,
            size = _ref2.size;
        return _react.default.createElement(_MaterialCommunityIcons.default, {
          name: "home",
          color: color,
          size: 26
        });
      }
    }
  }), _react.default.createElement(Tab.Screen, {
    name: "Cart",
    component: _Cart.default,
    options: {
      tabBarIcon: function tabBarIcon(_ref3) {
        var color = _ref3.color,
            size = _ref3.size;
        return _react.default.createElement(_MaterialCommunityIcons.default, {
          name: "cart",
          color: color,
          size: 26
        });
      }
    }
  }), _react.default.createElement(Tab.Screen, {
    name: "Messages",
    component: _Messages.default,
    options: {
      tabBarIcon: function tabBarIcon(_ref4) {
        var color = _ref4.color,
            size = _ref4.size;
        return _react.default.createElement(_MaterialCommunityIcons.default, {
          name: "message-bulleted",
          color: color,
          size: 26
        });
      }
    }
  }), _react.default.createElement(Tab.Screen, {
    name: "Post",
    component: _AddPost.default,
    options: {
      tabBarIcon: function tabBarIcon(_ref5) {
        var color = _ref5.color,
            size = _ref5.size;
        return _react.default.createElement(_MaterialCommunityIcons.default, {
          name: "camera",
          color: color,
          size: 26
        });
      }
    }
  }), _react.default.createElement(Tab.Screen, {
    name: "Profile",
    component: _Profile.default,
    listeners: function listeners(_ref6) {
      var navigation = _ref6.navigation;
      return {
        tabPress: function tabPress(event) {
          event.preventDefault();
          navigation.navigate("Profile", {
            uid: _firebase.default.auth().currentUser.uid
          });
        }
      };
    },
    options: {
      tabBarIcon: function tabBarIcon(_ref7) {
        var color = _ref7.color,
            size = _ref7.size;
        return _react.default.createElement(_MaterialCommunityIcons.default, {
          name: "account-circle",
          color: color,
          size: 26
        });
      }
    }
  }));
}

var styles = _reactNative.StyleSheet.create({
  card_template: {
    width: 250,
    height: 250
  },
  background: {
    borderRadius: 20
  },
  b: {
    marginTop: '160%'
  },
  card_image: {
    width: 250,
    height: 250,
    borderRadius: 10
  },
  text_container: {
    position: "absolute",
    width: 250,
    height: 30,
    bottom: 0,
    padding: 5,
    backgroundColor: "rgba(0,0,0, 0.3)",
    borderBottomLeftRadius: 10,
    borderBottomRightRadius: 10
  },
  card_title: {
    color: "white"
  },
  background: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  button: {
    width: 120,
    padding: 5,
    backgroundColor: '#B6DCB6',
    borderWidth: 2,
    borderColor: 'white',
    borderRadius: 15,
    alignSelf: 'center'
  },
  buttonText: {
    fontSize: 18,
    color: 'black',
    fontWeight: 'bold',
    textAlign: 'center'
  },
  container: {
    height: '100%',
    width: '100%',
    backgroundColor: '#ECF3FB',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    textAlign: 'center',
    fontSize: 20,
    fontStyle: 'italic',
    marginTop: '2%',
    marginBottom: '10%',
    fontWeight: 'bold',
    color: 'black'
  },
  titleText: {
    textAlign: 'center',
    fontSize: 20,
    fontWeight: 'bold',
    color: 'black',
    top: '-23%',
    left: '-30%'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,